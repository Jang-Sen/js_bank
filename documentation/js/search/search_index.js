var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/controllers/AppController.html",[0,1.612,1,2.376]],["body/controllers/AppController.html",[0,2.557,1,3.768,2,2.024,3,0.262,4,0.228,5,0.228,6,3.737,7,0.862,8,2.112,9,5.436,10,2.024,11,0.023,12,1.169,13,4.393,14,1.672,15,1.567,16,0.466,17,0.757,18,3.477,19,3.737,20,0.262,21,0.014,22,2.511,23,1.896,24,1.672,25,4.393,26,0.018,27,0.018]],["title/modules/AppModule.html",[28,1.112,29,2.376]],["body/modules/AppModule.html",[1,2.847,2,1.582,3,0.133,4,0.116,5,0.116,11,0.023,16,0.528,17,0.383,18,3.079,19,1.891,20,0.133,21,0.007,26,0.011,27,0.011,28,1.332,29,4.568,30,0.959,31,1.096,32,1.271,33,1.271,34,1.096,35,2.397,36,1.271,37,1.891,38,1.891,39,1.891,40,3.342,41,3.342,42,3.342,43,3.079,44,3.342,45,3.079,46,2.854,47,1.962,48,1.271,49,1.178,50,2.223,51,1.819,52,1.379,53,0.9,54,2.223,55,1.891,56,2.223,57,2.223,58,1.891,59,2.223,60,1.891,61,1.672,62,2.223,63,2.223,64,2.223,65,0.494,66,1.891,67,1.672,68,1.891,69,1.672,70,1.891,71,1.178,72,1.891,73,1.178,74,1.891,75,1.891,76,1.891,77,1.379,78,1.891,79,2.601,80,1.891,81,2.223,82,2.223,83,2.223,84,2.223,85,6.603,86,2.223,87,2.223,88,2.223,89,2.223,90,4.193,91,2.223,92,2.223,93,2.223,94,2.223,95,2.223,96,2.223,97,2.223,98,2.223,99,2.223,100,2.223,101,2.223,102,2.223,103,2.223,104,2.223,105,2.223,106,2.223,107,3.432,108,1.891,109,1.096]],["title/injectables/AppService.html",[18,2,110,0.526]],["body/injectables/AppService.html",[3,0.276,4,0.241,5,0.241,7,0.908,8,2.182,9,5.539,11,0.022,12,1.232,14,1.762,15,1.619,16,0.389,17,0.798,18,3.278,20,0.276,21,0.014,24,1.762,26,0.018,27,0.018,110,0.862,111,1.561,112,3.938,113,4.629,114,4.629,115,2.453]],["title/classes/Auth.html",[21,0.011,116,2.171]],["body/classes/Auth.html",[3,0.315,4,0.274,5,0.274,11,0.021,20,0.315,21,0.016,26,0.02,27,0.02,116,3.85,117,2.277,118,4.488]],["title/controllers/AuthController.html",[0,1.612,119,2.376]],["body/controllers/AuthController.html",[0,0.769,2,0.769,3,0.1,4,0.087,5,0.087,7,0.327,8,1.04,10,2.411,11,0.023,12,1.393,14,1.992,15,0.979,16,0.468,17,0.288,20,0.1,21,0.005,22,0.954,23,0.72,24,1.992,26,0.009,27,0.009,65,1.163,116,1.036,119,1.856,120,1.42,121,1.256,122,2.66,123,2.732,124,2.732,125,4.01,126,2.732,127,4.01,128,2.732,129,2.325,130,2.325,131,1.669,132,4.026,133,1.669,134,1.669,135,2.05,136,2.05,137,1.701,138,5.573,139,2.773,140,1.669,141,2.732,142,1.669,143,1.259,144,1.669,145,1.669,146,1.669,147,1.669,148,1.669,149,1.669,150,1.669,151,1.669,152,1.669,153,1.669,154,1.669,155,2.325,156,1.669,157,1.669,158,1.42,159,2.344,160,1.669,161,1.669,162,1.695,163,1.42,164,1.133,165,1.42,166,1.669,167,2.952,168,1.42,169,0.954,170,1.838,171,1.256,172,1.133,173,1.856,174,1.133,175,1.669,176,3.469,177,1.669,178,1.133,179,1.669,180,1.695,181,1.42,182,1.133,183,1.669,184,1.133,185,1.669,186,1.669,187,1.669,188,4.452,189,1.669,190,1.669,191,2.657,192,1.765,193,1.179,194,1.669,195,1.669,196,1.669,197,1.669,198,1.669,199,3.469,200,4.041,201,3.469,202,1.669,203,1.669,204,2.732,205,1.669,206,2.732,207,1.669,208,1.669,209,2.732,210,1.669,211,1.669,212,1.669,213,1.669,214,1.669]],["title/modules/AuthModule.html",[28,1.112,40,2.171]],["body/modules/AuthModule.html",[2,1.941,3,0.175,4,0.152,5,0.152,11,0.023,16,0.554,17,0.504,20,0.175,21,0.009,26,0.013,27,0.013,28,1.569,30,1.262,31,1.442,32,1.672,33,1.672,34,1.442,35,2.823,36,1.672,40,4.297,43,3.41,45,3.41,47,2.408,48,1.672,49,1.549,51,2.232,52,2.614,53,1.184,58,2.488,60,2.488,119,3.353,170,3.16,171,2.2,215,2.488,216,2.924,217,2.488,218,3.701,219,3.701,220,3.701,221,3.701,222,2.924,223,2.924,224,2.2,225,2.924,226,2.924,227,4.938,228,2.924,229,2.924,230,2.924,231,2.924]],["title/injectables/AuthService.html",[110,0.526,170,1.854]],["body/injectables/AuthService.html",[3,0.103,4,0.09,5,0.09,7,0.338,8,1.068,11,0.023,12,1.353,14,1.836,15,1.59,16,0.494,17,0.297,20,0.103,21,0.005,23,1.764,24,1.713,26,0.009,27,0.009,46,2.694,53,0.698,61,1.297,65,1.072,109,2.379,110,0.422,111,0.581,122,2.381,129,2.387,130,2.387,135,2.081,136,2.081,137,1.727,139,1.88,143,1.884,158,2.387,159,2.166,162,2.201,164,1.171,170,1.486,172,1.171,173,1.905,180,2.536,181,1.467,191,2.384,192,0.946,193,1.942,200,2.387,224,1.297,232,1.467,233,4.088,234,2.409,235,2.805,236,2.805,237,2.805,238,1.384,239,1.07,240,2.194,241,5.084,242,3.988,243,1.724,244,1.724,245,2.805,246,1.724,247,2.387,248,2.805,249,1.724,250,2.805,251,1.724,252,1.724,253,2.805,254,1.724,255,2.111,256,1.297,257,2.111,258,0.985,259,1.741,260,1.467,261,1.293,262,0.85,263,1.724,264,1.467,265,1.297,266,2.384,267,1.724,268,1.297,269,1.467,270,1.467,271,1.297,272,1.724,273,2.387,274,1.724,275,1.724,276,1.07,277,0.985,278,1.724,279,2.805,280,2.805,281,1.724,282,1.467,283,1.724,284,1.724,285,1.724,286,1.724,287,1.724,288,2.805,289,3.547,290,1.724,291,1.724,292,1.724,293,1.724]],["title/entities/Bank.html",[115,1.854,294,2.171]],["body/entities/Bank.html",[3,0.23,4,0.2,5,0.2,7,0.756,10,2.633,11,0.023,12,1.521,15,1.717,16,0.429,20,0.23,21,0.012,26,0.016,27,0.016,65,1.27,77,2.392,115,2.702,192,1.927,234,4.624,294,3.164,295,3.28,296,2.065,297,4.862,298,4.862,299,3.463,300,5.639,301,3.855,302,3.855,303,3.855,304,2.204,305,3.164,306,3.28,307,1.3]],["title/controllers/BankController.html",[0,1.612,308,2.376]],["body/controllers/BankController.html",[0,1.067,2,1.067,3,0.138,4,0.12,5,0.12,7,0.454,8,1.348,10,2.392,11,0.023,12,1.381,14,1.976,15,1.701,16,0.436,17,0.399,20,0.138,21,0.007,22,1.323,23,0.999,24,1.976,26,0.011,27,0.011,65,1.217,115,1.227,121,1.742,122,2.652,135,2.079,136,2.079,137,1.725,139,2.751,155,3.013,162,3.397,163,3.013,165,1.97,167,3.659,168,1.97,169,1.323,188,4.417,193,2.24,308,2.405,309,1.97,310,2.197,311,3.659,312,4.099,313,3.542,314,3.013,315,1.742,316,3.13,317,2.315,318,2.315,319,1.97,320,3.542,321,2.315,322,3.718,323,3.542,324,2.315,325,2.315,326,3.542,327,2.315,328,1.97,329,2.989,330,2.315,331,2.315,332,2.315,333,2.315,334,2.459,335,1.97,336,1.97,337,2.665,338,1.97,339,2.315,340,2.315,341,2.315,342,2.315,343,2.315,344,2.315,345,2.315,346,2.315,347,2.315,348,2.315,349,2.315,350,2.315,351,2.315]],["title/modules/BankModule.html",[28,1.112,41,2.171]],["body/modules/BankModule.html",[2,2.402,3,0.238,4,0.207,5,0.207,11,0.023,16,0.537,17,0.687,20,0.238,21,0.012,26,0.017,27,0.017,28,1.846,30,1.72,31,1.966,32,2.278,33,2.278,34,1.966,35,3.32,36,2.278,41,4.069,47,2.979,48,2.278,49,2.111,51,2.111,115,2.111,308,3.944,334,3.749,335,3.39,352,3.39,353,3.39,354,3.985,355,2.999,356,2.278,357,3.39,358,3.985,359,3.985]],["title/injectables/BankService.html",[110,0.526,334,2]],["body/injectables/BankService.html",[3,0.136,4,0.119,5,0.119,7,0.448,8,1.333,11,0.023,12,1.448,14,1.963,15,1.693,16,0.457,17,0.393,20,0.136,21,0.007,24,1.963,26,0.011,27,0.011,65,1.146,110,0.526,111,0.77,115,3.348,122,2.644,135,2.226,136,2.226,137,1.847,139,2.733,162,3.2,191,2.533,193,2.349,238,1.728,266,1.209,276,2.645,277,2.437,304,1.304,310,2.173,311,2.98,312,4.068,314,2.98,315,2.635,316,2.733,319,2.98,322,3.697,328,2.98,329,2.966,334,2.002,336,1.941,337,2.635,338,1.941,356,1.304,357,1.941,360,1.941,361,3.502,362,1.941,363,4.096,364,2.282,365,2.282,366,2.282,367,2.282,368,3.502,369,2.282,370,2.282,371,4.068,372,1.941,373,2.282,374,2.282,375,1.941,376,1.941,377,2.282,378,2.282,379,2.282]],["title/classes/BaseEntity.html",[21,0.011,305,2.171]],["body/classes/BaseEntity.html",[3,0.22,4,0.192,5,0.192,7,0.724,10,2.753,11,0.022,12,1.59,15,1.398,16,0.31,20,0.22,21,0.012,26,0.016,27,0.016,65,1.328,117,1.592,234,4.706,296,2.006,304,2.109,305,3.073,322,3.796,380,3.139,381,5.591,382,5.591,383,5.591,384,6.417,385,5.591,386,3.689,387,5.591,388,3.689,389,4.952,390,3.689,391,5.591,392,3.689,393,3.689,394,3.689]],["title/classes/CreateAuthDto.html",[21,0.011,395,2.376]],["body/classes/CreateAuthDto.html",[3,0.313,4,0.273,5,0.273,11,0.021,20,0.313,21,0.016,26,0.02,27,0.02,117,2.264,395,4.2,396,4.463,397,3.948]],["title/classes/CreateBankDto.html",[21,0.011,316,2]],["body/classes/CreateBankDto.html",[3,0.219,4,0.191,5,0.191,7,0.721,10,2.571,11,0.023,12,1.485,15,1.684,16,0.415,20,0.219,21,0.015,26,0.016,27,0.016,65,1.24,117,1.586,169,2.101,192,1.882,296,2,297,4.747,298,4.747,299,3.354,316,2.824,398,5.076,399,2.765,400,3.675,401,4.94,402,3.675,403,4.94,404,3.675,405,3.675,406,4.489,407,5.076,408,4.202,409,4.198,410,2.496,411,3.789]],["title/classes/CreateUserDto.html",[21,0.011,159,1.854]],["body/classes/CreateUserDto.html",[3,0.171,4,0.149,5,0.149,7,0.563,10,2.731,11,0.023,12,1.577,15,1.768,16,0.411,20,0.171,21,0.013,26,0.013,27,0.013,65,1.317,71,2.589,73,2.589,117,1.239,137,2.242,143,2.252,159,2.203,169,1.641,261,2.731,262,1.416,296,1.684,299,2.823,406,4.278,407,3.537,408,3.537,409,4.6,410,1.95,411,3.638,412,5.201,413,1.95,414,4.158,415,3.319,416,2.443,417,3.537,418,2.871,419,2.443,420,4.558,421,3.537,422,2.443,423,3.537,424,2.871,425,2.871,426,4.157,427,2.871,428,2.871,429,2.871,430,2.871,431,2.871,432,3.537,433,2.443,434,2.443,435,2.871,436,2.443,437,2.443,438,2.443]],["title/modules/DataBaseModule.html",[28,1.112,42,2.171]],["body/modules/DataBaseModule.html",[3,0.218,4,0.19,5,0.19,11,0.023,16,0.467,17,0.628,20,0.218,21,0.011,26,0.016,27,0.016,28,1.562,30,1.574,42,3.049,51,2.604,52,3.049,53,1.477,65,1.092,66,4.181,67,3.698,68,3.102,69,3.698,70,3.102,71,2.604,72,3.102,73,2.604,74,3.102,75,4.181,76,3.102,77,3.049,78,4.181,79,3.69,80,4.181,109,2.741,256,2.744,355,2.744,356,2.085,439,3.647,440,3.647,441,3.102,442,3.647,443,3.647,444,3.647,445,3.647,446,3.647,447,3.647,448,3.647,449,3.647]],["title/injectables/GoogleAuthGuard.html",[110,0.526,182,2.376]],["body/injectables/GoogleAuthGuard.html",[3,0.282,4,0.246,5,0.246,11,0.023,16,0.528,17,0.814,20,0.282,21,0.015,26,0.019,27,0.019,110,0.872,111,1.592,182,3.942,261,2.176,262,2.329,307,1.958,450,4.017,451,3.206,452,5.804,453,3.206,454,2.176]],["title/injectables/GoogleAuthStrategy.html",[110,0.526,218,2.171]],["body/injectables/GoogleAuthStrategy.html",[3,0.139,4,0.121,5,0.121,7,0.458,8,1.356,11,0.023,12,0.948,14,0.888,15,1.55,16,0.461,17,0.402,20,0.139,21,0.007,23,1.537,26,0.011,27,0.011,53,0.945,65,0.791,71,1.236,79,1.447,109,2.709,110,0.535,111,0.787,122,1.75,135,1.537,136,1.537,137,1.276,143,2.228,164,1.584,191,2.289,192,1.631,193,1.537,218,2.21,238,1.757,239,1.447,240,2.465,255,2.68,258,1.333,261,2.228,262,1.15,266,1.887,268,1.755,271,1.755,276,1.447,277,1.333,307,1.201,415,1.584,454,1.075,455,3.676,456,1.584,457,2.934,458,2.934,459,3.562,460,2.934,461,1.984,462,1.984,463,3.676,464,4.432,465,3.676,466,4.836,467,2.332,468,3.03,469,1.447,470,1.755,471,1.984,472,1.584,473,1.984,474,2.332,475,2.332,476,2.332,477,1.984,478,2.332,479,2.332,480,2.332,481,3.562,482,3.562,483,1.755,484,3.03,485,1.984,486,1.984,487,1.984,488,2.332,489,2.332,490,3.03,491,3.03,492,1.755,493,1.755,494,2.332,495,2.332]],["title/injectables/KakaoAuthGuard.html",[110,0.526,184,2.376]],["body/injectables/KakaoAuthGuard.html",[3,0.282,4,0.246,5,0.246,11,0.023,16,0.528,17,0.814,20,0.282,21,0.015,26,0.019,27,0.019,110,0.872,111,1.592,184,3.942,261,2.176,262,2.329,307,1.958,451,3.206,453,3.206,454,2.176,496,4.017,497,5.804]],["title/injectables/KakaoAuthStrategy.html",[110,0.526,219,2.171]],["body/injectables/KakaoAuthStrategy.html",[3,0.147,4,0.128,5,0.128,7,0.484,8,1.414,11,0.023,12,0.989,14,0.939,15,1.584,16,0.472,17,0.425,20,0.147,21,0.008,23,1.604,26,0.012,27,0.012,53,0.999,65,0.826,71,1.969,109,2.768,110,0.558,111,0.832,122,1.811,135,1.604,136,1.604,137,1.331,143,2.585,164,1.675,191,2.829,192,1.678,193,1.604,219,2.305,238,1.833,239,1.53,240,2.513,255,2.796,258,1.41,261,2.293,262,1.217,266,1.969,268,1.856,271,1.856,276,1.53,277,1.41,307,1.253,415,1.675,454,1.136,456,1.675,457,3.036,458,3.036,460,3.036,461,2.098,462,2.098,463,3.804,464,4.234,465,3.804,468,3.161,469,1.53,472,1.675,473,2.098,477,2.098,483,1.856,484,3.161,485,2.098,486,2.098,487,2.098,490,3.161,491,3.161,492,1.856,493,1.856,498,3.804,499,3.716,500,2.466,501,1.856,502,2.466,503,2.466,504,3.716,505,2.466,506,2.466,507,2.466]],["title/injectables/LocalAuthGuard.html",[110,0.526,174,2.376]],["body/injectables/LocalAuthGuard.html",[3,0.282,4,0.246,5,0.246,11,0.023,16,0.528,17,0.814,20,0.282,21,0.015,26,0.019,27,0.019,110,0.872,111,1.592,174,3.942,261,2.176,262,2.329,307,1.958,451,3.206,453,3.206,454,2.176,508,4.017,509,5.804]],["title/injectables/LocalAuthStrategy.html",[110,0.526,220,2.171]],["body/injectables/LocalAuthStrategy.html",[3,0.207,4,0.181,5,0.181,7,0.681,8,1.809,11,0.023,12,1.265,14,1.322,15,1.78,16,0.49,17,0.598,20,0.207,21,0.011,22,1.985,23,1.499,24,1.322,26,0.015,27,0.015,65,1.056,73,3.088,110,0.714,111,1.171,122,2.195,135,2.051,136,2.051,137,1.702,139,1.84,143,2.497,170,3.088,171,2.613,193,1.499,220,2.949,238,1.713,307,1.603,454,1.6,456,2.358,457,2.358,458,2.358,460,3.228,469,2.154,472,2.358,510,4.611,511,4.044,512,3.472,513,3.472,514,4.044,515,4.753,516,3.472,517,2.613,518,3.472,519,3.472]],["title/classes/LoginUserDto.html",[21,0.011,180,2.171]],["body/classes/LoginUserDto.html",[3,0.227,4,0.198,5,0.198,7,0.747,10,2.331,11,0.022,12,1.346,15,1.709,16,0.425,20,0.227,21,0.016,26,0.016,27,0.016,65,1.124,73,3.01,117,1.643,137,1.812,143,2.617,169,2.177,180,3.139,296,2.049,406,4.274,409,3.806,410,2.586,411,3.435,413,2.586,416,3.24,417,4.304,419,3.24,420,5.149,421,4.304,422,3.24,423,4.304,432,4.304,433,3.24,434,3.24,436,3.24,437,3.24,438,3.24,520,4.833,521,3.808,522,3.808]],["title/modules/MailModule.html",[28,1.112,43,2]],["body/modules/MailModule.html",[3,0.241,4,0.21,5,0.21,11,0.022,16,0.491,17,0.696,20,0.241,21,0.013,26,0.017,27,0.017,28,1.857,30,1.742,31,1.991,32,2.307,33,2.307,34,1.991,35,3.341,36,3.341,43,3.831,46,3.722,47,3.004,48,2.307,49,2.138,51,2.138,52,3.261,53,1.634,61,3.037,523,3.434,524,3.434,525,4.036,526,4.036]],["title/injectables/MailService.html",[46,1.854,110,0.526]],["body/injectables/MailService.html",[3,0.207,4,0.181,5,0.181,7,0.681,8,1.809,11,0.023,12,1.442,14,1.322,16,0.49,17,0.598,20,0.207,21,0.011,22,1.985,23,1.499,24,1.322,26,0.015,27,0.015,46,2.518,53,1.406,65,1.204,109,3.109,110,0.714,111,1.171,116,2.154,135,2.051,136,2.051,137,1.702,192,1.171,238,1.713,239,2.154,266,2.871,270,5.363,273,2.954,296,1.925,514,2.954,527,2.954,528,4.753,529,4.753,530,4.753,531,5.42,532,3.472,533,3.472,534,3.472,535,4.753,536,2.954,537,3.472,538,3.472,539,3.472,540,3.472,541,3.472]],["title/modules/RedisModule.html",[28,1.112,44,2.171]],["body/modules/RedisModule.html",[3,0.236,4,0.205,5,0.205,11,0.023,16,0.516,17,0.681,20,0.236,21,0.012,24,1.504,26,0.017,27,0.017,28,1.647,30,1.705,44,3.216,51,2.746,52,3.216,53,1.6,67,2.974,69,2.974,71,2.094,73,2.094,79,2.452,108,3.362,109,3.029,122,1.6,242,2.974,256,2.974,264,3.362,265,2.974,441,3.362,542,3.952,543,3.952,544,5.183,545,3.362,546,4.41,547,3.952,548,3.952,549,3.952,550,3.952,551,3.952,552,3.952,553,3.952]],["title/interfaces/RequestUserInterface.html",[132,2.376,554,2.171]],["body/interfaces/RequestUserInterface.html",[3,0.28,4,0.244,5,0.244,7,0.922,11,0.022,16,0.395,20,0.28,26,0.018,27,0.018,65,1.044,132,3.93,192,2.362,296,2.343,307,1.952,554,2.915,555,3.535,556,3.997,557,5.787,558,3.535]],["title/injectables/TokenGuard.html",[110,0.526,178,2.376]],["body/injectables/TokenGuard.html",[3,0.291,4,0.253,5,0.253,11,0.022,16,0.497,17,0.839,20,0.291,21,0.015,26,0.019,27,0.019,110,0.889,111,1.642,178,4.016,307,1.994,453,3.306,454,2.243,559,4.141,560,5.913]],["title/interfaces/TokenInterface.html",[259,2.171,554,2.171]],["body/interfaces/TokenInterface.html",[3,0.294,4,0.256,5,0.256,7,0.965,11,0.022,15,1.806,20,0.294,26,0.019,27,0.019,65,1.093,247,5.656,259,3.692,296,2.41,554,3.052,555,3.701,561,4.185]],["title/injectables/TokenStrategy.html",[110,0.526,221,2.171]],["body/injectables/TokenStrategy.html",[3,0.198,4,0.173,5,0.173,7,0.653,8,1.756,11,0.023,12,1.228,14,1.266,16,0.523,17,0.573,20,0.198,21,0.01,23,1.991,24,1.266,26,0.015,27,0.015,53,1.347,65,1.025,109,3.068,110,0.693,111,1.122,122,2.146,135,1.991,136,1.991,137,1.652,139,1.762,193,1.435,221,2.863,238,2.276,239,2.063,240,2.753,258,1.901,259,3.55,260,2.829,266,2.445,282,2.829,307,1.556,454,1.532,457,2.258,458,2.258,460,3.133,469,2.063,472,2.258,511,3.925,562,2.829,563,3.326,564,4.614,565,3.326,566,3.326,567,2.829,568,3.326,569,3.326,570,3.326,571,3.326,572,3.326,573,3.326]],["title/classes/UpdateAuthDto.html",[21,0.011,574,2.633]],["body/classes/UpdateAuthDto.html",[3,0.288,4,0.251,5,0.251,11,0.022,16,0.494,20,0.288,21,0.015,26,0.019,27,0.019,117,2.079,307,1.982,310,2.989,395,3.272,397,3.626,574,4.422,575,4.099,576,5.877,577,3.626,578,3.272,579,3.272,580,4.818]],["title/classes/UpdateBankDto.html",[21,0.011,329,2.171]],["body/classes/UpdateBankDto.html",[3,0.288,4,0.251,5,0.251,11,0.022,16,0.494,20,0.288,21,0.015,26,0.019,27,0.019,117,2.079,307,1.982,310,2.989,316,2.754,329,3.646,337,3.626,399,3.626,577,3.626,578,3.272,579,3.272,581,4.099,582,5.877]],["title/classes/UpdateUserDto.html",[21,0.011,583,2.633]],["body/classes/UpdateUserDto.html",[3,0.288,4,0.251,5,0.251,11,0.022,16,0.494,20,0.288,21,0.015,26,0.019,27,0.019,117,2.079,159,2.553,172,3.272,173,3.272,307,1.982,413,3.272,577,3.626,578,3.272,579,3.272,583,4.422,584,4.099,585,5.877]],["title/entities/User.html",[192,1.18,294,2.171]],["body/entities/User.html",[3,0.141,4,0.123,5,0.123,7,0.463,10,2.543,11,0.023,12,1.468,15,1.669,16,0.464,20,0.141,21,0.011,24,0.899,26,0.011,27,0.011,65,1.275,71,2.307,73,2.307,77,1.465,79,3.559,122,0.956,137,1.976,143,2.006,191,1.251,192,1.213,193,1.879,234,4.56,257,2.706,261,2.725,262,1.165,269,3.059,294,2.231,296,1.456,299,2.442,300,5.031,304,1.35,305,2.231,306,2.009,307,0.796,414,3.704,415,2.957,483,1.777,492,1.777,493,1.777,586,2.009,587,2.361,588,2.361,589,4.354,590,2.361,591,2.361,592,2.361,593,2.361,594,2.361,595,4.867,596,3.596,597,2.361,598,2.361,599,2.361,600,3.596,601,3.596,602,2.009,603,3.059,604,4.354,605,2.361,606,2.361,607,2.361,608,3.596,609,2.361,610,2.361,611,2.361,612,2.361,613,2.361,614,2.361,615,2.361,616,2.361,617,2.361,618,2.361,619,2.361,620,2.361,621,2.361,622,2.361]],["title/controllers/UserController.html",[0,1.612,623,2.376]],["body/controllers/UserController.html",[0,2.198,2,2.198,3,0.285,4,0.248,5,0.248,11,0.023,16,0.491,17,0.822,20,0.285,21,0.015,22,2.726,23,2.058,26,0.019,27,0.019,121,3.589,192,1.609,240,2.724,258,2.726,623,3.966,624,4.058,625,4.77]],["title/modules/UserModule.html",[28,1.112,45,2]],["body/modules/UserModule.html",[2,2.331,3,0.227,4,0.198,5,0.198,11,0.023,16,0.529,17,0.656,20,0.227,21,0.012,26,0.016,27,0.016,28,1.805,30,1.643,31,1.879,32,2.177,33,2.177,34,1.879,35,3.247,36,3.247,45,3.778,47,2.892,48,2.177,49,2.018,51,2.018,192,1.284,240,3.005,258,2.177,355,2.866,356,2.177,558,2.866,623,3.857,626,3.24,627,3.24,628,3.24,629,3.808,630,3.808,631,3.808]],["title/injectables/UserService.html",[110,0.526,240,1.51]],["body/injectables/UserService.html",[3,0.173,4,0.151,5,0.151,7,0.57,8,1.596,11,0.023,12,1.309,14,1.596,15,1.389,16,0.48,17,0.501,20,0.173,21,0.009,24,1.596,26,0.013,27,0.013,65,1.093,110,0.63,111,0.98,122,2.411,135,2.124,136,2.124,137,1.762,139,2.222,143,2.483,159,2.855,162,1.803,172,1.974,173,1.974,191,2.222,192,2.007,193,1.81,238,2.069,240,1.81,266,1.54,276,1.803,277,1.661,304,1.661,310,2.602,315,3.156,322,3.659,356,1.661,362,2.473,363,4.479,371,3.568,372,2.473,375,2.473,376,2.473,558,2.187,632,2.473,633,4.194,634,2.906,635,2.906,636,4.194,637,4.584,638,2.906,639,4.921,640,2.906,641,2.906]],["title/coverage.html",[642,3.595]],["body/coverage.html",[0,2.311,1,1.701,5,0.13,6,2.132,11,0.023,18,1.432,21,0.019,26,0.012,27,0.012,34,1.236,46,1.328,65,0.557,110,0.981,112,2.132,115,1.328,116,1.555,118,2.132,119,1.701,120,2.132,132,1.701,159,1.328,170,1.328,174,1.701,178,1.701,180,1.555,182,1.701,184,1.701,192,0.845,218,1.555,219,1.555,220,1.555,221,1.555,232,2.132,240,1.081,259,1.555,277,1.432,294,2.333,295,2.132,305,1.555,308,1.701,309,2.132,316,1.432,329,1.555,334,1.432,360,2.132,380,2.132,395,1.701,396,2.132,397,2.829,398,2.132,399,2.829,412,2.132,413,3.065,450,2.132,451,3.065,455,2.132,456,3.065,496,2.132,498,2.132,508,2.132,510,2.132,520,2.132,527,2.132,554,2.333,556,2.132,559,2.132,561,2.132,562,2.132,574,1.885,575,2.132,581,2.132,583,1.885,584,2.132,586,2.132,623,1.701,624,2.132,632,2.132,642,1.885,643,2.132,644,2.506,645,2.506,646,7.073,647,5.016,648,2.506,649,2.506,650,6.524,651,5.375,652,2.506,653,3.76,654,4.513,655,2.506,656,2.132,657,2.506,658,2.506,659,2.506]],["title/dependencies.html",[31,2.076,660,2.484]],["body/dependencies.html",[11,0.023,17,0.539,21,0.014,26,0.014,27,0.014,31,1.543,53,1.267,55,2.661,169,1.788,224,2.353,242,3.326,257,2.353,265,3.326,304,1.788,356,1.788,410,2.124,454,1.441,469,3.646,470,3.326,471,3.76,501,3.326,517,3.326,536,2.661,545,2.661,546,2.661,567,3.76,578,2.124,579,2.124,602,2.661,603,2.661,661,3.128,662,3.128,663,3.128,664,5.126,665,3.128,666,3.128,667,3.128,668,3.128,669,3.128,670,3.128,671,3.128,672,3.128,673,3.128,674,3.128,675,3.128,676,4.42,677,4.42,678,3.128,679,3.128,680,3.128,681,3.128,682,3.128,683,3.128,684,5.57,685,3.128,686,4.42,687,3.128,688,3.128,689,3.128,690,3.128,691,3.128,692,3.128,693,3.128,694,3.128,695,3.128,696,3.128,697,3.128,698,3.128,699,3.128,700,4.42,701,3.128,702,3.128,703,3.128,704,3.128,705,3.128,706,3.128,707,3.128]],["title/miscellaneous/enumerations.html",[708,1.983,709,3.58]],["body/miscellaneous/enumerations.html",[7,0.965,11,0.022,26,0.019,27,0.019,261,2.742,470,4.478,501,4.478,517,4.478,637,5.656,708,3.34,709,4.185,710,4.919,711,4.919,712,5.951]],["title/miscellaneous/functions.html",[708,1.983,713,3.58]],["body/miscellaneous/functions.html",[7,1.047,11,0.02,26,0.02,27,0.02,34,3.267,656,4.539,708,3.623,713,4.539,714,5.335]],["title/index.html",[7,0.573,715,2.92,716,2.92]],["body/index.html",[4,0.146,11,0.022,26,0.013,27,0.013,49,2.811,363,2.115,411,3.279,642,2.115,643,2.392,717,2.811,718,2.811,719,4.829,720,2.811,721,2.811,722,2.811,723,2.811,724,2.811,725,2.811,726,2.392,727,4.829,728,2.811,729,2.811,730,5.304,731,2.811,732,6.074,733,2.811,734,6.074,735,2.811,736,2.811,737,2.811,738,4.094,739,2.811,740,2.811,741,2.811,742,4.829,743,2.811,744,4.094,745,2.811,746,2.811,747,2.811,748,5.304,749,2.811,750,2.811,751,2.811,752,2.811,753,2.811,754,5.304,755,4.094,756,2.811,757,4.829,758,2.811,759,4.513,760,4.094,761,2.811,762,2.811,763,2.811,764,2.811,765,2.811,766,2.811,767,4.829,768,2.811,769,2.811,770,2.811,771,4.094,772,2.392,773,2.811,774,2.811,775,4.829,776,2.811,777,2.811,778,2.811,779,2.811,780,2.811,781,2.811,782,2.811,783,4.094,784,2.811,785,2.811,786,2.811,787,2.811,788,2.811,789,2.811,790,4.094,791,2.811,792,2.811,793,2.811,794,4.094,795,4.094,796,2.811,797,2.811,798,2.811,799,2.811,800,2.811,801,2.811,802,2.811,803,2.811,804,2.811,805,2.811,806,2.811,807,2.392,808,2.811,809,2.811,810,2.811,811,2.811,812,2.811,813,2.811,814,2.392]],["title/modules.html",[30,2.062]],["body/modules.html",[11,0.018,26,0.018,27,0.018,29,3.159,30,2.008,40,2.886,41,2.886,42,2.886,43,2.659,44,2.886,45,2.659,759,5.702,772,4.893,815,6.702,816,6.702,817,6.919,818,5.751]],["title/overview.html",[819,4.065]],["body/overview.html",[2,1.356,11,0.022,18,2.833,26,0.014,27,0.014,28,0.935,29,4.706,30,1.27,31,1.451,32,1.682,33,1.682,34,1.451,35,1.682,36,1.682,37,2.503,38,2.503,39,2.503,40,4.28,41,3.562,42,3.074,43,3.521,44,3.074,45,3.521,46,3.339,47,2.419,48,1.682,49,1.559,77,1.826,111,0.992,117,1.27,170,2.625,215,2.503,217,2.503,218,3.074,219,3.074,220,3.074,221,3.074,240,2.658,334,2.833,352,2.503,353,2.503,523,2.503,524,2.503,555,2.214,626,2.503,627,2.503,628,2.503,819,2.503,820,2.942,821,2.942,822,4.232,823,2.942,824,2.942]],["title/properties.html",[296,1.704,660,2.484]],["body/properties.html",[11,0.022,26,0.02,27,0.02,296,2.125,726,4.463,807,4.463,814,4.463,825,5.246,826,5.246,827,5.246]]],"invertedIndex":[["",{"_index":11,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/Auth.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"entities/Bank.html":{},"controllers/BankController.html":{},"modules/BankModule.html":{},"injectables/BankService.html":{},"classes/BaseEntity.html":{},"classes/CreateAuthDto.html":{},"classes/CreateBankDto.html":{},"classes/CreateUserDto.html":{},"modules/DataBaseModule.html":{},"injectables/GoogleAuthGuard.html":{},"injectables/GoogleAuthStrategy.html":{},"injectables/KakaoAuthGuard.html":{},"injectables/KakaoAuthStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalAuthStrategy.html":{},"classes/LoginUserDto.html":{},"modules/MailModule.html":{},"injectables/MailService.html":{},"modules/RedisModule.html":{},"interfaces/RequestUserInterface.html":{},"injectables/TokenGuard.html":{},"interfaces/TokenInterface.html":{},"injectables/TokenStrategy.html":{},"classes/UpdateAuthDto.html":{},"classes/UpdateBankDto.html":{},"classes/UpdateUserDto.html":{},"entities/User.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{}}}],["0",{"_index":646,"title":{},"body":{"coverage.html":{}}}],["0.0.1",{"_index":826,"title":{},"body":{"properties.html":{}}}],["0.1.10",{"_index":685,"title":{},"body":{"dependencies.html":{}}}],["0.14.1",{"_index":693,"title":{},"body":{"dependencies.html":{}}}],["0.2.0",{"_index":700,"title":{},"body":{"dependencies.html":{}}}],["0.3.20",{"_index":707,"title":{},"body":{"dependencies.html":{}}}],["0.5.1",{"_index":692,"title":{},"body":{"dependencies.html":{}}}],["0.7.0",{"_index":699,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":650,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":647,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":651,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":654,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":655,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":652,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":653,"title":{},"body":{"coverage.html":{}}}],["0/8",{"_index":649,"title":{},"body":{"coverage.html":{}}}],["0/9",{"_index":648,"title":{},"body":{"coverage.html":{}}}],["1",{"_index":293,"title":{},"body":{"injectables/AuthService.html":{}}}],["1.0.0",{"_index":702,"title":{},"body":{"dependencies.html":{}}}],["1.0.1",{"_index":701,"title":{},"body":{"dependencies.html":{}}}],["1.0.3",{"_index":687,"title":{},"body":{"dependencies.html":{}}}],["1.0.38",{"_index":688,"title":{},"body":{"dependencies.html":{}}}],["1.1.26",{"_index":662,"title":{},"body":{"dependencies.html":{}}}],["1.4.7",{"_index":677,"title":{},"body":{"dependencies.html":{}}}],["1.8.2",{"_index":695,"title":{},"body":{"dependencies.html":{}}}],["1.8.6",{"_index":679,"title":{},"body":{"dependencies.html":{}}}],["10.0.0",{"_index":664,"title":{},"body":{"dependencies.html":{}}}],["10.0.2",{"_index":672,"title":{},"body":{"dependencies.html":{}}}],["10.0.3",{"_index":668,"title":{},"body":{"dependencies.html":{}}}],["10.2.0",{"_index":667,"title":{},"body":{"dependencies.html":{}}}],["1012345678",{"_index":426,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["123456a",{"_index":423,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/LoginUserDto.html":{}}}],["13",{"_index":823,"title":{},"body":{"overview.html":{}}}],["17.1.1",{"_index":663,"title":{},"body":{"dependencies.html":{}}}],["17.1.14",{"_index":681,"title":{},"body":{"dependencies.html":{}}}],["2",{"_index":822,"title":{},"body":{"overview.html":{}}}],["2.0.0",{"_index":691,"title":{},"body":{"dependencies.html":{}}}],["200",{"_index":615,"title":{},"body":{"entities/User.html":{}}}],["3.11.3",{"_index":697,"title":{},"body":{"dependencies.html":{}}}],["3.2.3",{"_index":665,"title":{},"body":{"dependencies.html":{}}}],["3307",{"_index":70,"title":{},"body":{"modules/AppModule.html":{},"modules/DataBaseModule.html":{}}}],["4",{"_index":821,"title":{},"body":{"overview.html":{}}}],["4.0.1",{"_index":686,"title":{},"body":{"dependencies.html":{}}}],["4.1.0",{"_index":690,"title":{},"body":{"dependencies.html":{}}}],["404",{"_index":495,"title":{},"body":{"injectables/GoogleAuthStrategy.html":{}}}],["409",{"_index":489,"title":{},"body":{"injectables/GoogleAuthStrategy.html":{}}}],["5.0.2",{"_index":674,"title":{},"body":{"dependencies.html":{}}}],["5.1.1",{"_index":689,"title":{},"body":{"dependencies.html":{}}}],["50000",{"_index":401,"title":{},"body":{"classes/CreateBankDto.html":{}}}],["6.4.16",{"_index":683,"title":{},"body":{"dependencies.html":{}}}],["6.9.15",{"_index":698,"title":{},"body":{"dependencies.html":{}}}],["7",{"_index":820,"title":{},"body":{"overview.html":{}}}],["7.4.2",{"_index":671,"title":{},"body":{"dependencies.html":{}}}],["7.8.1",{"_index":706,"title":{},"body":{"dependencies.html":{}}}],["9",{"_index":824,"title":{},"body":{"overview.html":{}}}],["__dirname",{"_index":448,"title":{},"body":{"modules/DataBaseModule.html":{}}}],["abstract",{"_index":394,"title":{},"body":{"classes/BaseEntity.html":{}}}],["accesstoken",{"_index":468,"title":{},"body":{"injectables/GoogleAuthStrategy.html":{},"injectables/KakaoAuthStrategy.html":{}}}],["already",{"_index":485,"title":{},"body":{"injectables/GoogleAuthStrategy.html":{},"injectables/KakaoAuthStrategy.html":{}}}],["amazing",{"_index":800,"title":{},"body":{"index.html":{}}}],["amount",{"_index":297,"title":{},"body":{"entities/Bank.html":{},"classes/CreateBankDto.html":{}}}],["api",{"_index":188,"title":{},"body":{"controllers/AuthController.html":{},"controllers/BankController.html":{}}}],["apibody",{"_index":167,"title":{},"body":{"controllers/AuthController.html":{},"controllers/BankController.html":{}}}],["apibody({type",{"_index":155,"title":{},"body":{"controllers/AuthController.html":{},"controllers/BankController.html":{}}}],["apiproperty",{"_index":406,"title":{},"body":{"classes/CreateBankDto.html":{},"classes/CreateUserDto.html":{},"classes/LoginUserDto.html":{}}}],["apitags",{"_index":168,"title":{},"body":{"controllers/AuthController.html":{},"controllers/BankController.html":{}}}],["apitags('auth",{"_index":186,"title":{},"body":{"controllers/AuthController.html":{}}}],["apitags('bank",{"_index":339,"title":{},"body":{"controllers/BankController.html":{}}}],["appcontroller",{"_index":1,"title":{"controllers/AppController.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"coverage.html":{}}}],["application",{"_index":771,"title":{},"body":{"index.html":{}}}],["applications",{"_index":725,"title":{},"body":{"index.html":{}}}],["appmodule",{"_index":29,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["appservice",{"_index":18,"title":{"injectables/AppService.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"coverage.html":{},"overview.html":{}}}],["async",{"_index":122,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/BankController.html":{},"injectables/BankService.html":{},"injectables/GoogleAuthStrategy.html":{},"injectables/KakaoAuthStrategy.html":{},"injectables/LocalAuthStrategy.html":{},"modules/RedisModule.html":{},"injectables/TokenStrategy.html":{},"entities/User.html":{},"injectables/UserService.html":{}}}],["auth",{"_index":116,"title":{"classes/Auth.html":{}},"body":{"classes/Auth.html":{},"controllers/AuthController.html":{},"injectables/MailService.html":{},"coverage.html":{}}}],["auth.dto",{"_index":580,"title":{},"body":{"classes/UpdateAuthDto.html":{}}}],["auth.dto.ts",{"_index":397,"title":{},"body":{"classes/CreateAuthDto.html":{},"classes/UpdateAuthDto.html":{},"coverage.html":{}}}],["auth.guard",{"_index":176,"title":{},"body":{"controllers/AuthController.html":{}}}],["auth.guard.ts",{"_index":451,"title":{},"body":{"injectables/GoogleAuthGuard.html":{},"injectables/KakaoAuthGuard.html":{},"injectables/LocalAuthGuard.html":{},"coverage.html":{}}}],["auth.strategy",{"_index":227,"title":{},"body":{"modules/AuthModule.html":{}}}],["auth.strategy.ts",{"_index":456,"title":{},"body":{"injectables/GoogleAuthStrategy.html":{},"injectables/KakaoAuthStrategy.html":{},"injectables/LocalAuthStrategy.html":{},"coverage.html":{}}}],["auth.strategy.ts:12",{"_index":461,"title":{},"body":{"injectables/GoogleAuthStrategy.html":{},"injectables/KakaoAuthStrategy.html":{}}}],["auth.strategy.ts:15",{"_index":516,"title":{},"body":{"injectables/LocalAuthStrategy.html":{}}}],["auth.strategy.ts:23",{"_index":500,"title":{},"body":{"injectables/KakaoAuthStrategy.html":{}}}],["auth.strategy.ts:27",{"_index":467,"title":{},"body":{"injectables/GoogleAuthStrategy.html":{}}}],["auth.strategy.ts:7",{"_index":513,"title":{},"body":{"injectables/LocalAuthStrategy.html":{}}}],["auth/auth.controller",{"_index":225,"title":{},"body":{"modules/AuthModule.html":{}}}],["auth/auth.module",{"_index":59,"title":{},"body":{"modules/AppModule.html":{}}}],["auth/auth.service",{"_index":171,"title":{},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/LocalAuthStrategy.html":{}}}],["auth/guard/google",{"_index":183,"title":{},"body":{"controllers/AuthController.html":{}}}],["auth/guard/kakao",{"_index":185,"title":{},"body":{"controllers/AuthController.html":{}}}],["auth/guard/local",{"_index":175,"title":{},"body":{"controllers/AuthController.html":{}}}],["auth/guard/token.guard",{"_index":179,"title":{},"body":{"controllers/AuthController.html":{}}}],["auth/interface/requestuser.interface",{"_index":177,"title":{},"body":{"controllers/AuthController.html":{}}}],["auth/interface/token.interface",{"_index":260,"title":{},"body":{"injectables/AuthService.html":{},"injectables/TokenStrategy.html":{}}}],["auth/strategy/google",{"_index":229,"title":{},"body":{"modules/AuthModule.html":{}}}],["auth/strategy/kakao",{"_index":230,"title":{},"body":{"modules/AuthModule.html":{}}}],["auth/strategy/local",{"_index":226,"title":{},"body":{"modules/AuthModule.html":{}}}],["auth/strategy/token.strategy",{"_index":228,"title":{},"body":{"modules/AuthModule.html":{}}}],["authcontroller",{"_index":119,"title":{"controllers/AuthController.html":{}},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"coverage.html":{}}}],["authenticate",{"_index":123,"title":{},"body":{"controllers/AuthController.html":{}}}],["authenticate(@req",{"_index":203,"title":{},"body":{"controllers/AuthController.html":{}}}],["authenticate(req",{"_index":131,"title":{},"body":{"controllers/AuthController.html":{}}}],["authguard",{"_index":453,"title":{},"body":{"injectables/GoogleAuthGuard.html":{},"injectables/KakaoAuthGuard.html":{},"injectables/LocalAuthGuard.html":{},"injectables/TokenGuard.html":{}}}],["authguard('jwt",{"_index":560,"title":{},"body":{"injectables/TokenGuard.html":{}}}],["authguard(provider.google",{"_index":452,"title":{},"body":{"injectables/GoogleAuthGuard.html":{}}}],["authguard(provider.kakao",{"_index":497,"title":{},"body":{"injectables/KakaoAuthGuard.html":{}}}],["authguard(provider.local",{"_index":509,"title":{},"body":{"injectables/LocalAuthGuard.html":{}}}],["authmodule",{"_index":40,"title":{"modules/AuthModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules.html":{},"overview.html":{}}}],["author",{"_index":807,"title":{},"body":{"index.html":{},"properties.html":{}}}],["authservice",{"_index":170,"title":{"injectables/AuthService.html":{}},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/LocalAuthStrategy.html":{},"coverage.html":{},"overview.html":{}}}],["autoloadentities",{"_index":78,"title":{},"body":{"modules/AppModule.html":{},"modules/DataBaseModule.html":{}}}],["available",{"_index":818,"title":{},"body":{"modules.html":{}}}],["await",{"_index":193,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/BankController.html":{},"injectables/BankService.html":{},"injectables/GoogleAuthStrategy.html":{},"injectables/KakaoAuthStrategy.html":{},"injectables/LocalAuthStrategy.html":{},"injectables/TokenStrategy.html":{},"entities/User.html":{},"injectables/UserService.html":{}}}],["backers",{"_index":801,"title":{},"body":{"index.html":{}}}],["bank",{"_index":115,"title":{"entities/Bank.html":{}},"body":{"injectables/AppService.html":{},"entities/Bank.html":{},"controllers/BankController.html":{},"modules/BankModule.html":{},"injectables/BankService.html":{},"coverage.html":{}}}],["bank.dto",{"_index":337,"title":{},"body":{"controllers/BankController.html":{},"injectables/BankService.html":{},"classes/UpdateBankDto.html":{}}}],["bank.dto.ts",{"_index":399,"title":{},"body":{"classes/CreateBankDto.html":{},"classes/UpdateBankDto.html":{},"coverage.html":{}}}],["bank.dto.ts:13",{"_index":405,"title":{},"body":{"classes/CreateBankDto.html":{}}}],["bank.dto.ts:20",{"_index":402,"title":{},"body":{"classes/CreateBankDto.html":{}}}],["bank.dto.ts:8",{"_index":404,"title":{},"body":{"classes/CreateBankDto.html":{}}}],["bank/bank.controller",{"_index":358,"title":{},"body":{"modules/BankModule.html":{}}}],["bank/bank.module",{"_index":56,"title":{},"body":{"modules/AppModule.html":{}}}],["bank/bank.service",{"_index":335,"title":{},"body":{"controllers/BankController.html":{},"modules/BankModule.html":{}}}],["bank/dto/create",{"_index":336,"title":{},"body":{"controllers/BankController.html":{},"injectables/BankService.html":{}}}],["bank/dto/update",{"_index":338,"title":{},"body":{"controllers/BankController.html":{},"injectables/BankService.html":{}}}],["bank/entities/bank.entity",{"_index":357,"title":{},"body":{"modules/BankModule.html":{},"injectables/BankService.html":{}}}],["bank/entities/base.entity",{"_index":306,"title":{},"body":{"entities/Bank.html":{},"entities/User.html":{}}}],["bankcontroller",{"_index":308,"title":{"controllers/BankController.html":{}},"body":{"controllers/BankController.html":{},"modules/BankModule.html":{},"coverage.html":{}}}],["bankmodule",{"_index":41,"title":{"modules/BankModule.html":{}},"body":{"modules/AppModule.html":{},"modules/BankModule.html":{},"modules.html":{},"overview.html":{}}}],["bankname",{"_index":298,"title":{},"body":{"entities/Bank.html":{},"classes/CreateBankDto.html":{}}}],["bankservice",{"_index":334,"title":{"injectables/BankService.html":{}},"body":{"controllers/BankController.html":{},"modules/BankModule.html":{},"injectables/BankService.html":{},"coverage.html":{},"overview.html":{}}}],["baseentity",{"_index":305,"title":{"classes/BaseEntity.html":{}},"body":{"entities/Bank.html":{},"classes/BaseEntity.html":{},"entities/User.html":{},"coverage.html":{}}}],["bcrypt",{"_index":257,"title":{},"body":{"injectables/AuthService.html":{},"entities/User.html":{},"dependencies.html":{}}}],["bcrypt.compare(dto.password",{"_index":274,"title":{},"body":{"injectables/AuthService.html":{}}}],["bcrypt.gensalt(10",{"_index":609,"title":{},"body":{"entities/User.html":{}}}],["bcrypt.hash(this.password",{"_index":611,"title":{},"body":{"entities/User.html":{}}}],["beforefunction",{"_index":606,"title":{},"body":{"entities/User.html":{}}}],["beforeinsert",{"_index":600,"title":{},"body":{"entities/User.html":{}}}],["board",{"_index":793,"title":{},"body":{"index.html":{}}}],["body",{"_index":163,"title":{},"body":{"controllers/AuthController.html":{},"controllers/BankController.html":{}}}],["bootstrap",{"_index":34,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/BankModule.html":{},"modules/MailModule.html":{},"modules/UserModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"overview.html":{}}}],["browse",{"_index":817,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":815,"title":{},"body":{"modules.html":{}}}],["building",{"_index":720,"title":{},"body":{"index.html":{}}}],["c",{"_index":442,"title":{},"body":{"modules/DataBaseModule.html":{}}}],["c.get('mysql_database",{"_index":447,"title":{},"body":{"modules/DataBaseModule.html":{}}}],["c.get('mysql_host",{"_index":443,"title":{},"body":{"modules/DataBaseModule.html":{}}}],["c.get('mysql_port",{"_index":444,"title":{},"body":{"modules/DataBaseModule.html":{}}}],["c.get('mysql_root_password",{"_index":446,"title":{},"body":{"modules/DataBaseModule.html":{}}}],["c.get('mysql_user",{"_index":445,"title":{},"body":{"modules/DataBaseModule.html":{}}}],["cache",{"_index":242,"title":{},"body":{"injectables/AuthService.html":{},"modules/RedisModule.html":{},"dependencies.html":{}}}],["cache_manager",{"_index":263,"title":{},"body":{"injectables/AuthService.html":{}}}],["cachemodule",{"_index":543,"title":{},"body":{"modules/RedisModule.html":{}}}],["cachemodule.registerasync",{"_index":547,"title":{},"body":{"modules/RedisModule.html":{}}}],["callbackurl",{"_index":477,"title":{},"body":{"injectables/GoogleAuthStrategy.html":{},"injectables/KakaoAuthStrategy.html":{}}}],["catch",{"_index":492,"title":{},"body":{"injectables/GoogleAuthStrategy.html":{},"injectables/KakaoAuthStrategy.html":{},"entities/User.html":{}}}],["channel",{"_index":762,"title":{},"body":{"index.html":{}}}],["check",{"_index":748,"title":{},"body":{"index.html":{}}}],["class",{"_index":21,"title":{"classes/Auth.html":{},"classes/BaseEntity.html":{},"classes/CreateAuthDto.html":{},"classes/CreateBankDto.html":{},"classes/CreateUserDto.html":{},"classes/LoginUserDto.html":{},"classes/UpdateAuthDto.html":{},"classes/UpdateBankDto.html":{},"classes/UpdateUserDto.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/Auth.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"entities/Bank.html":{},"controllers/BankController.html":{},"modules/BankModule.html":{},"injectables/BankService.html":{},"classes/BaseEntity.html":{},"classes/CreateAuthDto.html":{},"classes/CreateBankDto.html":{},"classes/CreateUserDto.html":{},"modules/DataBaseModule.html":{},"injectables/GoogleAuthGuard.html":{},"injectables/GoogleAuthStrategy.html":{},"injectables/KakaoAuthGuard.html":{},"injectables/KakaoAuthStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalAuthStrategy.html":{},"classes/LoginUserDto.html":{},"modules/MailModule.html":{},"injectables/MailService.html":{},"modules/RedisModule.html":{},"injectables/TokenGuard.html":{},"injectables/TokenStrategy.html":{},"classes/UpdateAuthDto.html":{},"classes/UpdateBankDto.html":{},"classes/UpdateUserDto.html":{},"entities/User.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"coverage.html":{},"dependencies.html":{}}}],["classes",{"_index":117,"title":{},"body":{"classes/Auth.html":{},"classes/BaseEntity.html":{},"classes/CreateAuthDto.html":{},"classes/CreateBankDto.html":{},"classes/CreateUserDto.html":{},"classes/LoginUserDto.html":{},"classes/UpdateAuthDto.html":{},"classes/UpdateBankDto.html":{},"classes/UpdateUserDto.html":{},"overview.html":{}}}],["clientid",{"_index":473,"title":{},"body":{"injectables/GoogleAuthStrategy.html":{},"injectables/KakaoAuthStrategy.html":{}}}],["clientsecret",{"_index":475,"title":{},"body":{"injectables/GoogleAuthStrategy.html":{}}}],["cluster_appmodule",{"_index":37,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":39,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_providers",{"_index":38,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_authmodule",{"_index":215,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_authmodule_imports",{"_index":216,"title":{},"body":{"modules/AuthModule.html":{}}}],["cluster_authmodule_providers",{"_index":217,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_bankmodule",{"_index":352,"title":{},"body":{"modules/BankModule.html":{},"overview.html":{}}}],["cluster_bankmodule_providers",{"_index":353,"title":{},"body":{"modules/BankModule.html":{},"overview.html":{}}}],["cluster_mailmodule",{"_index":523,"title":{},"body":{"modules/MailModule.html":{},"overview.html":{}}}],["cluster_mailmodule_exports",{"_index":524,"title":{},"body":{"modules/MailModule.html":{},"overview.html":{}}}],["cluster_mailmodule_providers",{"_index":525,"title":{},"body":{"modules/MailModule.html":{}}}],["cluster_usermodule",{"_index":626,"title":{},"body":{"modules/UserModule.html":{},"overview.html":{}}}],["cluster_usermodule_exports",{"_index":627,"title":{},"body":{"modules/UserModule.html":{},"overview.html":{}}}],["cluster_usermodule_providers",{"_index":628,"title":{},"body":{"modules/UserModule.html":{},"overview.html":{}}}],["column",{"_index":300,"title":{},"body":{"entities/Bank.html":{},"entities/User.html":{}}}],["column({nullable",{"_index":589,"title":{},"body":{"entities/User.html":{}}}],["column({type",{"_index":594,"title":{},"body":{"entities/User.html":{}}}],["column({unique",{"_index":587,"title":{},"body":{"entities/User.html":{}}}],["come",{"_index":751,"title":{},"body":{"index.html":{}}}],["compodoc/compodoc",{"_index":661,"title":{},"body":{"dependencies.html":{}}}],["configmodule",{"_index":52,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/DataBaseModule.html":{},"modules/MailModule.html":{},"modules/RedisModule.html":{}}}],["configmodule.forroot",{"_index":81,"title":{},"body":{"modules/AppModule.html":{}}}],["configservice",{"_index":109,"title":{},"body":{"modules/AppModule.html":{},"injectables/AuthService.html":{},"modules/DataBaseModule.html":{},"injectables/GoogleAuthStrategy.html":{},"injectables/KakaoAuthStrategy.html":{},"injectables/MailService.html":{},"modules/RedisModule.html":{},"injectables/TokenStrategy.html":{}}}],["configservice.get('google_callback_url",{"_index":478,"title":{},"body":{"injectables/GoogleAuthStrategy.html":{}}}],["configservice.get('google_client_id",{"_index":474,"title":{},"body":{"injectables/GoogleAuthStrategy.html":{}}}],["configservice.get('google_client_secret",{"_index":476,"title":{},"body":{"injectables/GoogleAuthStrategy.html":{}}}],["configservice.get('kakao_callback_url",{"_index":503,"title":{},"body":{"injectables/KakaoAuthStrategy.html":{}}}],["configservice.get('kakao_client_id",{"_index":502,"title":{},"body":{"injectables/KakaoAuthStrategy.html":{}}}],["configservice.get('mail_password",{"_index":540,"title":{},"body":{"injectables/MailService.html":{}}}],["configservice.get('mail_service",{"_index":538,"title":{},"body":{"injectables/MailService.html":{}}}],["configservice.get('mail_user",{"_index":539,"title":{},"body":{"injectables/MailService.html":{}}}],["configservice.get('redis_host",{"_index":548,"title":{},"body":{"modules/RedisModule.html":{}}}],["configservice.get('redis_password",{"_index":551,"title":{},"body":{"modules/RedisModule.html":{}}}],["configservice.get('redis_port",{"_index":549,"title":{},"body":{"modules/RedisModule.html":{}}}],["configservice.get('redis_ttl",{"_index":553,"title":{},"body":{"modules/RedisModule.html":{}}}],["configservice.get('redis_user",{"_index":550,"title":{},"body":{"modules/RedisModule.html":{}}}],["configservice.get('token_secret",{"_index":571,"title":{},"body":{"injectables/TokenStrategy.html":{}}}],["console.log",{"_index":490,"title":{},"body":{"injectables/GoogleAuthStrategy.html":{},"injectables/KakaoAuthStrategy.html":{}}}],["console.log(e",{"_index":622,"title":{},"body":{"entities/User.html":{}}}],["const",{"_index":191,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/BankService.html":{},"injectables/GoogleAuthStrategy.html":{},"injectables/KakaoAuthStrategy.html":{},"entities/User.html":{},"injectables/UserService.html":{}}}],["constructor",{"_index":238,"title":{},"body":{"injectables/AuthService.html":{},"injectables/BankService.html":{},"injectables/GoogleAuthStrategy.html":{},"injectables/KakaoAuthStrategy.html":{},"injectables/LocalAuthStrategy.html":{},"injectables/MailService.html":{},"injectables/TokenStrategy.html":{},"injectables/UserService.html":{}}}],["constructor(configservice",{"_index":239,"title":{},"body":{"injectables/AuthService.html":{},"injectables/GoogleAuthStrategy.html":{},"injectables/KakaoAuthStrategy.html":{},"injectables/MailService.html":{},"injectables/TokenStrategy.html":{}}}],["constructor(private",{"_index":22,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"controllers/BankController.html":{},"injectables/LocalAuthStrategy.html":{},"injectables/MailService.html":{},"controllers/UserController.html":{}}}],["constructor(repository",{"_index":362,"title":{},"body":{"injectables/BankService.html":{},"injectables/UserService.html":{}}}],["constructor(service",{"_index":512,"title":{},"body":{"injectables/LocalAuthStrategy.html":{}}}],["controller",{"_index":0,"title":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"controllers/BankController.html":{},"controllers/UserController.html":{}},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"controllers/BankController.html":{},"controllers/UserController.html":{},"coverage.html":{}}}],["controller('auth",{"_index":187,"title":{},"body":{"controllers/AuthController.html":{}}}],["controller('bank",{"_index":340,"title":{},"body":{"controllers/BankController.html":{}}}],["controller('user",{"_index":625,"title":{},"body":{"controllers/UserController.html":{}}}],["controllers",{"_index":2,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"controllers/BankController.html":{},"modules/BankModule.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["cookie",{"_index":694,"title":{},"body":{"dependencies.html":{}}}],["courses",{"_index":769,"title":{},"body":{"index.html":{}}}],["coverage",{"_index":642,"title":{"coverage.html":{}},"body":{"coverage.html":{},"index.html":{}}}],["create",{"_index":310,"title":{},"body":{"controllers/BankController.html":{},"injectables/BankService.html":{},"classes/UpdateAuthDto.html":{},"classes/UpdateBankDto.html":{},"injectables/UserService.html":{}}}],["create(@body",{"_index":345,"title":{},"body":{"controllers/BankController.html":{}}}],["create(dto",{"_index":315,"title":{},"body":{"controllers/BankController.html":{},"injectables/BankService.html":{},"injectables/UserService.html":{}}}],["createat",{"_index":381,"title":{},"body":{"classes/BaseEntity.html":{}}}],["createauthdto",{"_index":395,"title":{"classes/CreateAuthDto.html":{}},"body":{"classes/CreateAuthDto.html":{},"classes/UpdateAuthDto.html":{},"coverage.html":{}}}],["createbankdto",{"_index":316,"title":{"classes/CreateBankDto.html":{}},"body":{"controllers/BankController.html":{},"injectables/BankService.html":{},"classes/CreateBankDto.html":{},"classes/UpdateBankDto.html":{},"coverage.html":{}}}],["createbankdto})@post('/create",{"_index":317,"title":{},"body":{"controllers/BankController.html":{}}}],["createbankdto})@put('/:id",{"_index":330,"title":{},"body":{"controllers/BankController.html":{}}}],["createdatecolumn",{"_index":385,"title":{},"body":{"classes/BaseEntity.html":{}}}],["createtransport",{"_index":535,"title":{},"body":{"injectables/MailService.html":{}}}],["createuserdto",{"_index":159,"title":{"classes/CreateUserDto.html":{}},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/CreateUserDto.html":{},"classes/UpdateUserDto.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["createuserdto})@post('/signup",{"_index":160,"title":{},"body":{"controllers/AuthController.html":{}}}],["d",{"_index":618,"title":{},"body":{"entities/User.html":{}}}],["database",{"_index":75,"title":{},"body":{"modules/AppModule.html":{},"modules/DataBaseModule.html":{}}}],["databasemodule",{"_index":42,"title":{"modules/DataBaseModule.html":{}},"body":{"modules/AppModule.html":{},"modules/DataBaseModule.html":{},"modules.html":{},"overview.html":{}}}],["date",{"_index":384,"title":{},"body":{"classes/BaseEntity.html":{}}}],["db",{"_index":507,"title":{},"body":{"injectables/KakaoAuthStrategy.html":{}}}],["db/db.module",{"_index":57,"title":{},"body":{"modules/AppModule.html":{}}}],["db_js",{"_index":76,"title":{},"body":{"modules/AppModule.html":{},"modules/DataBaseModule.html":{}}}],["declarations",{"_index":33,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/BankModule.html":{},"modules/MailModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["decorators",{"_index":10,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"entities/Bank.html":{},"controllers/BankController.html":{},"classes/BaseEntity.html":{},"classes/CreateBankDto.html":{},"classes/CreateUserDto.html":{},"classes/LoginUserDto.html":{},"entities/User.html":{}}}],["deeper",{"_index":764,"title":{},"body":{"index.html":{}}}],["default",{"_index":596,"title":{},"body":{"entities/User.html":{}}}],["defined",{"_index":12,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"entities/Bank.html":{},"controllers/BankController.html":{},"injectables/BankService.html":{},"classes/BaseEntity.html":{},"classes/CreateBankDto.html":{},"classes/CreateUserDto.html":{},"injectables/GoogleAuthStrategy.html":{},"injectables/KakaoAuthStrategy.html":{},"injectables/LocalAuthStrategy.html":{},"classes/LoginUserDto.html":{},"injectables/MailService.html":{},"injectables/TokenStrategy.html":{},"entities/User.html":{},"injectables/UserService.html":{}}}],["delete",{"_index":311,"title":{},"body":{"controllers/BankController.html":{},"injectables/BankService.html":{}}}],["delete('/:id",{"_index":320,"title":{},"body":{"controllers/BankController.html":{}}}],["delete(@param('id",{"_index":347,"title":{},"body":{"controllers/BankController.html":{}}}],["delete(id",{"_index":319,"title":{},"body":{"controllers/BankController.html":{},"injectables/BankService.html":{}}}],["deleteat",{"_index":382,"title":{},"body":{"classes/BaseEntity.html":{}}}],["deletedatecolumn",{"_index":387,"title":{},"body":{"classes/BaseEntity.html":{}}}],["dependencies",{"_index":31,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/BankModule.html":{},"modules/MailModule.html":{},"modules/UserModule.html":{},"dependencies.html":{},"overview.html":{}}}],["description",{"_index":726,"title":{},"body":{"index.html":{},"properties.html":{}}}],["development",{"_index":735,"title":{},"body":{"index.html":{}}}],["devtools",{"_index":777,"title":{},"body":{"index.html":{}}}],["discord",{"_index":761,"title":{},"body":{"index.html":{}}}],["displayname",{"_index":481,"title":{},"body":{"injectables/GoogleAuthStrategy.html":{}}}],["dive",{"_index":763,"title":{},"body":{"index.html":{}}}],["documentation",{"_index":643,"title":{},"body":{"coverage.html":{},"index.html":{}}}],["done",{"_index":465,"title":{},"body":{"injectables/GoogleAuthStrategy.html":{},"injectables/KakaoAuthStrategy.html":{}}}],["done(null",{"_index":491,"title":{},"body":{"injectables/GoogleAuthStrategy.html":{},"injectables/KakaoAuthStrategy.html":{}}}],["dto",{"_index":162,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/BankController.html":{},"injectables/BankService.html":{},"injectables/UserService.html":{}}}],["dto.email",{"_index":272,"title":{},"body":{"injectables/AuthService.html":{}}}],["e",{"_index":493,"title":{},"body":{"injectables/GoogleAuthStrategy.html":{},"injectables/KakaoAuthStrategy.html":{},"entities/User.html":{}}}],["e.status",{"_index":494,"title":{},"body":{"injectables/GoogleAuthStrategy.html":{}}}],["e2e",{"_index":745,"title":{},"body":{"index.html":{}}}],["efficient",{"_index":721,"title":{},"body":{"index.html":{}}}],["email",{"_index":143,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/CreateUserDto.html":{},"injectables/GoogleAuthStrategy.html":{},"injectables/KakaoAuthStrategy.html":{},"injectables/LocalAuthStrategy.html":{},"classes/LoginUserDto.html":{},"entities/User.html":{},"injectables/UserService.html":{}}}],["emailsendotp",{"_index":124,"title":{},"body":{"controllers/AuthController.html":{}}}],["emailsendotp(@body('email",{"_index":213,"title":{},"body":{"controllers/AuthController.html":{}}}],["emailsendotp(email",{"_index":140,"title":{},"body":{"controllers/AuthController.html":{}}}],["enterprise",{"_index":782,"title":{},"body":{"index.html":{}}}],["entities",{"_index":77,"title":{},"body":{"modules/AppModule.html":{},"entities/Bank.html":{},"modules/DataBaseModule.html":{},"entities/User.html":{},"overview.html":{}}}],["entity",{"_index":294,"title":{"entities/Bank.html":{},"entities/User.html":{}},"body":{"entities/Bank.html":{},"entities/User.html":{},"coverage.html":{}}}],["entity{.ts,.js",{"_index":449,"title":{},"body":{"modules/DataBaseModule.html":{}}}],["enum",{"_index":595,"title":{},"body":{"entities/User.html":{}}}],["enumerations",{"_index":709,"title":{"miscellaneous/enumerations.html":{}},"body":{"miscellaneous/enumerations.html":{}}}],["env",{"_index":107,"title":{},"body":{"modules/AppModule.html":{}}}],["envfilepath",{"_index":106,"title":{},"body":{"modules/AppModule.html":{}}}],["example",{"_index":411,"title":{},"body":{"classes/CreateBankDto.html":{},"classes/CreateUserDto.html":{},"classes/LoginUserDto.html":{},"index.html":{}}}],["example@exam.com",{"_index":417,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/LoginUserDto.html":{}}}],["exclude",{"_index":601,"title":{},"body":{"entities/User.html":{}}}],["experience",{"_index":766,"title":{},"body":{"index.html":{}}}],["expiresin",{"_index":286,"title":{},"body":{"injectables/AuthService.html":{}}}],["export",{"_index":20,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/Auth.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"entities/Bank.html":{},"controllers/BankController.html":{},"modules/BankModule.html":{},"injectables/BankService.html":{},"classes/BaseEntity.html":{},"classes/CreateAuthDto.html":{},"classes/CreateBankDto.html":{},"classes/CreateUserDto.html":{},"modules/DataBaseModule.html":{},"injectables/GoogleAuthGuard.html":{},"injectables/GoogleAuthStrategy.html":{},"injectables/KakaoAuthGuard.html":{},"injectables/KakaoAuthStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalAuthStrategy.html":{},"classes/LoginUserDto.html":{},"modules/MailModule.html":{},"injectables/MailService.html":{},"modules/RedisModule.html":{},"interfaces/RequestUserInterface.html":{},"injectables/TokenGuard.html":{},"interfaces/TokenInterface.html":{},"injectables/TokenStrategy.html":{},"classes/UpdateAuthDto.html":{},"classes/UpdateBankDto.html":{},"classes/UpdateUserDto.html":{},"entities/User.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{}}}],["exports",{"_index":36,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/BankModule.html":{},"modules/MailModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["express",{"_index":670,"title":{},"body":{"dependencies.html":{}}}],["extends",{"_index":307,"title":{},"body":{"entities/Bank.html":{},"injectables/GoogleAuthGuard.html":{},"injectables/GoogleAuthStrategy.html":{},"injectables/KakaoAuthGuard.html":{},"injectables/KakaoAuthStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalAuthStrategy.html":{},"interfaces/RequestUserInterface.html":{},"injectables/TokenGuard.html":{},"injectables/TokenStrategy.html":{},"classes/UpdateAuthDto.html":{},"classes/UpdateBankDto.html":{},"classes/UpdateUserDto.html":{},"entities/User.html":{}}}],["extractjwt",{"_index":566,"title":{},"body":{"injectables/TokenStrategy.html":{}}}],["extractjwt.fromauthheaderasbearertoken",{"_index":569,"title":{},"body":{"injectables/TokenStrategy.html":{}}}],["few",{"_index":749,"title":{},"body":{"index.html":{}}}],["file",{"_index":5,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/Auth.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"entities/Bank.html":{},"controllers/BankController.html":{},"modules/BankModule.html":{},"injectables/BankService.html":{},"classes/BaseEntity.html":{},"classes/CreateAuthDto.html":{},"classes/CreateBankDto.html":{},"classes/CreateUserDto.html":{},"modules/DataBaseModule.html":{},"injectables/GoogleAuthGuard.html":{},"injectables/GoogleAuthStrategy.html":{},"injectables/KakaoAuthGuard.html":{},"injectables/KakaoAuthStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalAuthStrategy.html":{},"classes/LoginUserDto.html":{},"modules/MailModule.html":{},"injectables/MailService.html":{},"modules/RedisModule.html":{},"interfaces/RequestUserInterface.html":{},"injectables/TokenGuard.html":{},"interfaces/TokenInterface.html":{},"injectables/TokenStrategy.html":{},"classes/UpdateAuthDto.html":{},"classes/UpdateBankDto.html":{},"classes/UpdateUserDto.html":{},"entities/User.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["follow",{"_index":786,"title":{},"body":{"index.html":{}}}],["framework",{"_index":719,"title":{},"body":{"index.html":{}}}],["full",{"_index":781,"title":{},"body":{"index.html":{}}}],["function",{"_index":657,"title":{},"body":{"coverage.html":{}}}],["functions",{"_index":713,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["generateotp",{"_index":233,"title":{},"body":{"injectables/AuthService.html":{}}}],["generatetoken",{"_index":235,"title":{},"body":{"injectables/AuthService.html":{}}}],["generatetoken(userid",{"_index":245,"title":{},"body":{"injectables/AuthService.html":{}}}],["get('/:id",{"_index":326,"title":{},"body":{"controllers/BankController.html":{}}}],["get('/all",{"_index":323,"title":{},"body":{"controllers/BankController.html":{}}}],["get('/google",{"_index":205,"title":{},"body":{"controllers/AuthController.html":{}}}],["get('/google/callback",{"_index":207,"title":{},"body":{"controllers/AuthController.html":{}}}],["get('/kakao",{"_index":210,"title":{},"body":{"controllers/AuthController.html":{}}}],["get('/kakao/callback",{"_index":211,"title":{},"body":{"controllers/AuthController.html":{}}}],["getall",{"_index":312,"title":{},"body":{"controllers/BankController.html":{},"injectables/BankService.html":{}}}],["getbankbyid",{"_index":361,"title":{},"body":{"injectables/BankService.html":{}}}],["getbankbyid(id",{"_index":368,"title":{},"body":{"injectables/BankService.html":{}}}],["getbyid",{"_index":313,"title":{},"body":{"controllers/BankController.html":{}}}],["getbyid(@param('id",{"_index":342,"title":{},"body":{"controllers/BankController.html":{}}}],["getbyid(id",{"_index":325,"title":{},"body":{"controllers/BankController.html":{}}}],["gethello",{"_index":9,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{}}}],["getting",{"_index":715,"title":{"index.html":{}},"body":{}}],["getuserby",{"_index":633,"title":{},"body":{"injectables/UserService.html":{}}}],["getuserby(key",{"_index":636,"title":{},"body":{"injectables/UserService.html":{}}}],["google",{"_index":470,"title":{},"body":{"injectables/GoogleAuthStrategy.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{}}}],["google_callback_url",{"_index":98,"title":{},"body":{"modules/AppModule.html":{}}}],["google_client_id",{"_index":96,"title":{},"body":{"modules/AppModule.html":{}}}],["google_client_secret",{"_index":97,"title":{},"body":{"modules/AppModule.html":{}}}],["googleauthguard",{"_index":182,"title":{"injectables/GoogleAuthGuard.html":{}},"body":{"controllers/AuthController.html":{},"injectables/GoogleAuthGuard.html":{},"coverage.html":{}}}],["googleauthstrategy",{"_index":218,"title":{"injectables/GoogleAuthStrategy.html":{}},"body":{"modules/AuthModule.html":{},"injectables/GoogleAuthStrategy.html":{},"coverage.html":{},"overview.html":{}}}],["googlelogin",{"_index":125,"title":{},"body":{"controllers/AuthController.html":{}}}],["googlelogincallback",{"_index":126,"title":{},"body":{"controllers/AuthController.html":{}}}],["googlelogincallback(@req",{"_index":208,"title":{},"body":{"controllers/AuthController.html":{}}}],["googlelogincallback(req",{"_index":146,"title":{},"body":{"controllers/AuthController.html":{}}}],["graph",{"_index":772,"title":{},"body":{"index.html":{},"modules.html":{}}}],["gravatar",{"_index":603,"title":{},"body":{"entities/User.html":{},"dependencies.html":{}}}],["gravatar.url(this.email",{"_index":613,"title":{},"body":{"entities/User.html":{}}}],["grow",{"_index":797,"title":{},"body":{"index.html":{}}}],["hands",{"_index":765,"title":{},"body":{"index.html":{}}}],["handy",{"_index":752,"title":{},"body":{"index.html":{}}}],["hapi/joi",{"_index":55,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["help",{"_index":779,"title":{},"body":{"index.html":{}}}],["here",{"_index":805,"title":{},"body":{"index.html":{}}}],["host",{"_index":67,"title":{},"body":{"modules/AppModule.html":{},"modules/DataBaseModule.html":{},"modules/RedisModule.html":{}}}],["html",{"_index":281,"title":{},"body":{"injectables/AuthService.html":{}}}],["http",{"_index":488,"title":{},"body":{"injectables/GoogleAuthStrategy.html":{}}}],["httpexception",{"_index":255,"title":{},"body":{"injectables/AuthService.html":{},"injectables/GoogleAuthStrategy.html":{},"injectables/KakaoAuthStrategy.html":{}}}],["https",{"_index":621,"title":{},"body":{"entities/User.html":{}}}],["https://nestjs.com",{"_index":811,"title":{},"body":{"index.html":{}}}],["httpstatus",{"_index":164,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/GoogleAuthStrategy.html":{},"injectables/KakaoAuthStrategy.html":{}}}],["httpstatus.bad_request",{"_index":278,"title":{},"body":{"injectables/AuthService.html":{}}}],["httpstatus.conflict",{"_index":487,"title":{},"body":{"injectables/GoogleAuthStrategy.html":{},"injectables/KakaoAuthStrategy.html":{}}}],["httpstatus.ok",{"_index":206,"title":{},"body":{"controllers/AuthController.html":{}}}],["id",{"_index":322,"title":{},"body":{"controllers/BankController.html":{},"injectables/BankService.html":{},"classes/BaseEntity.html":{},"injectables/UserService.html":{}}}],["identifier",{"_index":644,"title":{},"body":{"coverage.html":{}}}],["import",{"_index":16,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"entities/Bank.html":{},"controllers/BankController.html":{},"modules/BankModule.html":{},"injectables/BankService.html":{},"classes/BaseEntity.html":{},"classes/CreateBankDto.html":{},"classes/CreateUserDto.html":{},"modules/DataBaseModule.html":{},"injectables/GoogleAuthGuard.html":{},"injectables/GoogleAuthStrategy.html":{},"injectables/KakaoAuthGuard.html":{},"injectables/KakaoAuthStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalAuthStrategy.html":{},"classes/LoginUserDto.html":{},"modules/MailModule.html":{},"injectables/MailService.html":{},"modules/RedisModule.html":{},"interfaces/RequestUserInterface.html":{},"injectables/TokenGuard.html":{},"injectables/TokenStrategy.html":{},"classes/UpdateAuthDto.html":{},"classes/UpdateBankDto.html":{},"classes/UpdateUserDto.html":{},"entities/User.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{}}}],["imports",{"_index":51,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/BankModule.html":{},"modules/DataBaseModule.html":{},"modules/MailModule.html":{},"modules/RedisModule.html":{},"modules/UserModule.html":{}}}],["index",{"_index":7,"title":{"index.html":{}},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"entities/Bank.html":{},"controllers/BankController.html":{},"injectables/BankService.html":{},"classes/BaseEntity.html":{},"classes/CreateBankDto.html":{},"classes/CreateUserDto.html":{},"injectables/GoogleAuthStrategy.html":{},"injectables/KakaoAuthStrategy.html":{},"injectables/LocalAuthStrategy.html":{},"classes/LoginUserDto.html":{},"injectables/MailService.html":{},"interfaces/RequestUserInterface.html":{},"interfaces/TokenInterface.html":{},"injectables/TokenStrategy.html":{},"entities/User.html":{},"injectables/UserService.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{}}}],["info",{"_index":3,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/Auth.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"entities/Bank.html":{},"controllers/BankController.html":{},"modules/BankModule.html":{},"injectables/BankService.html":{},"classes/BaseEntity.html":{},"classes/CreateAuthDto.html":{},"classes/CreateBankDto.html":{},"classes/CreateUserDto.html":{},"modules/DataBaseModule.html":{},"injectables/GoogleAuthGuard.html":{},"injectables/GoogleAuthStrategy.html":{},"injectables/KakaoAuthGuard.html":{},"injectables/KakaoAuthStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalAuthStrategy.html":{},"classes/LoginUserDto.html":{},"modules/MailModule.html":{},"injectables/MailService.html":{},"modules/RedisModule.html":{},"interfaces/RequestUserInterface.html":{},"injectables/TokenGuard.html":{},"interfaces/TokenInterface.html":{},"injectables/TokenStrategy.html":{},"classes/UpdateAuthDto.html":{},"classes/UpdateBankDto.html":{},"classes/UpdateUserDto.html":{},"entities/User.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{}}}],["inject",{"_index":256,"title":{},"body":{"injectables/AuthService.html":{},"modules/DataBaseModule.html":{},"modules/RedisModule.html":{}}}],["inject(cache_manager",{"_index":267,"title":{},"body":{"injectables/AuthService.html":{}}}],["injectable",{"_index":110,"title":{"injectables/AppService.html":{},"injectables/AuthService.html":{},"injectables/BankService.html":{},"injectables/GoogleAuthGuard.html":{},"injectables/GoogleAuthStrategy.html":{},"injectables/KakaoAuthGuard.html":{},"injectables/KakaoAuthStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalAuthStrategy.html":{},"injectables/MailService.html":{},"injectables/TokenGuard.html":{},"injectables/TokenStrategy.html":{},"injectables/UserService.html":{}},"body":{"injectables/AppService.html":{},"injectables/AuthService.html":{},"injectables/BankService.html":{},"injectables/GoogleAuthGuard.html":{},"injectables/GoogleAuthStrategy.html":{},"injectables/KakaoAuthGuard.html":{},"injectables/KakaoAuthStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalAuthStrategy.html":{},"injectables/MailService.html":{},"injectables/TokenGuard.html":{},"injectables/TokenStrategy.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["injectables",{"_index":111,"title":{},"body":{"injectables/AppService.html":{},"injectables/AuthService.html":{},"injectables/BankService.html":{},"injectables/GoogleAuthGuard.html":{},"injectables/GoogleAuthStrategy.html":{},"injectables/KakaoAuthGuard.html":{},"injectables/KakaoAuthStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalAuthStrategy.html":{},"injectables/MailService.html":{},"injectables/TokenGuard.html":{},"injectables/TokenStrategy.html":{},"injectables/UserService.html":{},"overview.html":{}}}],["injectrepository",{"_index":372,"title":{},"body":{"injectables/BankService.html":{},"injectables/UserService.html":{}}}],["injectrepository(bank",{"_index":373,"title":{},"body":{"injectables/BankService.html":{}}}],["injectrepository(user",{"_index":640,"title":{},"body":{"injectables/UserService.html":{}}}],["installcompile",{"_index":733,"title":{},"body":{"index.html":{}}}],["interact",{"_index":773,"title":{},"body":{"index.html":{}}}],["interface",{"_index":554,"title":{"interfaces/RequestUserInterface.html":{},"interfaces/TokenInterface.html":{}},"body":{"interfaces/RequestUserInterface.html":{},"interfaces/TokenInterface.html":{},"coverage.html":{}}}],["interfaces",{"_index":555,"title":{},"body":{"interfaces/RequestUserInterface.html":{},"interfaces/TokenInterface.html":{},"overview.html":{}}}],["isemail",{"_index":432,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/LoginUserDto.html":{}}}],["isemail()@apiproperty({example",{"_index":416,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/LoginUserDto.html":{}}}],["isglobal",{"_index":108,"title":{},"body":{"modules/AppModule.html":{},"modules/RedisModule.html":{}}}],["isnotempty",{"_index":407,"title":{},"body":{"classes/CreateBankDto.html":{},"classes/CreateUserDto.html":{}}}],["isnumber",{"_index":408,"title":{},"body":{"classes/CreateBankDto.html":{},"classes/CreateUserDto.html":{}}}],["isnumber()@apiproperty({example",{"_index":425,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["isnumber()@isnotempty()@apiproperty({example",{"_index":400,"title":{},"body":{"classes/CreateBankDto.html":{}}}],["isstring",{"_index":409,"title":{},"body":{"classes/CreateBankDto.html":{},"classes/CreateUserDto.html":{},"classes/LoginUserDto.html":{}}}],["isstring()@isnotempty()@apiproperty({example",{"_index":403,"title":{},"body":{"classes/CreateBankDto.html":{}}}],["isstring()@isnotempty()@minlength(2)@apiproperty({example",{"_index":430,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["isstring()@minlength(7)@matches(/^(?=.*[a",{"_index":419,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/LoginUserDto.html":{}}}],["jangsen",{"_index":114,"title":{},"body":{"injectables/AppService.html":{}}}],["job",{"_index":790,"title":{},"body":{"index.html":{}}}],["jobs",{"_index":792,"title":{},"body":{"index.html":{}}}],["joi",{"_index":54,"title":{},"body":{"modules/AppModule.html":{}}}],["joi.number().required",{"_index":90,"title":{},"body":{"modules/AppModule.html":{}}}],["joi.object",{"_index":83,"title":{},"body":{"modules/AppModule.html":{}}}],["joi.string().required",{"_index":85,"title":{},"body":{"modules/AppModule.html":{}}}],["join",{"_index":803,"title":{},"body":{"index.html":{}}}],["jwt",{"_index":567,"title":{},"body":{"injectables/TokenStrategy.html":{},"dependencies.html":{}}}],["jwtfromrequest",{"_index":568,"title":{},"body":{"injectables/TokenStrategy.html":{}}}],["jwtmodule",{"_index":223,"title":{},"body":{"modules/AuthModule.html":{}}}],["jwtmodule.register",{"_index":231,"title":{},"body":{"modules/AuthModule.html":{}}}],["jwtservice",{"_index":241,"title":{},"body":{"injectables/AuthService.html":{}}}],["kakao",{"_index":501,"title":{},"body":{"injectables/KakaoAuthStrategy.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{}}}],["kakao_callback_url",{"_index":100,"title":{},"body":{"modules/AppModule.html":{}}}],["kakao_client_id",{"_index":99,"title":{},"body":{"modules/AppModule.html":{}}}],["kakaoauthguard",{"_index":184,"title":{"injectables/KakaoAuthGuard.html":{}},"body":{"controllers/AuthController.html":{},"injectables/KakaoAuthGuard.html":{},"coverage.html":{}}}],["kakaoauthstrategy",{"_index":219,"title":{"injectables/KakaoAuthStrategy.html":{}},"body":{"modules/AuthModule.html":{},"injectables/KakaoAuthStrategy.html":{},"coverage.html":{},"overview.html":{}}}],["kakaologin",{"_index":127,"title":{},"body":{"controllers/AuthController.html":{}}}],["kakaologincallback",{"_index":128,"title":{},"body":{"controllers/AuthController.html":{}}}],["kakaologincallback(@req",{"_index":212,"title":{},"body":{"controllers/AuthController.html":{}}}],["kakaologincallback(req",{"_index":151,"title":{},"body":{"controllers/AuthController.html":{}}}],["kamil",{"_index":808,"title":{},"body":{"index.html":{}}}],["key",{"_index":639,"title":{},"body":{"injectables/UserService.html":{}}}],["learn",{"_index":756,"title":{},"body":{"index.html":{}}}],["legend",{"_index":32,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/BankModule.html":{},"modules/MailModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["license",{"_index":814,"title":{},"body":{"index.html":{},"properties.html":{}}}],["licensed",{"_index":795,"title":{},"body":{"index.html":{}}}],["linkedin",{"_index":788,"title":{},"body":{"index.html":{}}}],["load",{"_index":282,"title":{},"body":{"injectables/AuthService.html":{},"injectables/TokenStrategy.html":{}}}],["load.userid",{"_index":573,"title":{},"body":{"injectables/TokenStrategy.html":{}}}],["local",{"_index":517,"title":{},"body":{"injectables/LocalAuthStrategy.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{}}}],["localauthguard",{"_index":174,"title":{"injectables/LocalAuthGuard.html":{}},"body":{"controllers/AuthController.html":{},"injectables/LocalAuthGuard.html":{},"coverage.html":{}}}],["localauthstrategy",{"_index":220,"title":{"injectables/LocalAuthStrategy.html":{}},"body":{"modules/AuthModule.html":{},"injectables/LocalAuthStrategy.html":{},"coverage.html":{},"overview.html":{}}}],["localhost",{"_index":68,"title":{},"body":{"modules/AppModule.html":{},"modules/DataBaseModule.html":{}}}],["login",{"_index":129,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["login(@req",{"_index":198,"title":{},"body":{"controllers/AuthController.html":{}}}],["login(dto",{"_index":248,"title":{},"body":{"injectables/AuthService.html":{}}}],["login(req",{"_index":154,"title":{},"body":{"controllers/AuthController.html":{}}}],["loginuserdto",{"_index":180,"title":{"classes/LoginUserDto.html":{}},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/LoginUserDto.html":{},"coverage.html":{}}}],["loginuserdto})@useguards(localauthguard)@post('/login",{"_index":156,"title":{},"body":{"controllers/AuthController.html":{}}}],["looking",{"_index":789,"title":{},"body":{"index.html":{}}}],["loop",{"_index":784,"title":{},"body":{"index.html":{}}}],["mail",{"_index":270,"title":{},"body":{"injectables/AuthService.html":{},"injectables/MailService.html":{}}}],["mail.options",{"_index":531,"title":{},"body":{"injectables/MailService.html":{}}}],["mail/mail.module",{"_index":60,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{}}}],["mail/mail.service",{"_index":61,"title":{},"body":{"modules/AppModule.html":{},"injectables/AuthService.html":{},"modules/MailModule.html":{}}}],["mail_password",{"_index":93,"title":{},"body":{"modules/AppModule.html":{}}}],["mail_service",{"_index":91,"title":{},"body":{"modules/AppModule.html":{}}}],["mail_user",{"_index":92,"title":{},"body":{"modules/AppModule.html":{}}}],["mailmodule",{"_index":43,"title":{"modules/MailModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/MailModule.html":{},"modules.html":{},"overview.html":{}}}],["mailservice",{"_index":46,"title":{"injectables/MailService.html":{}},"body":{"modules/AppModule.html":{},"injectables/AuthService.html":{},"modules/MailModule.html":{},"injectables/MailService.html":{},"coverage.html":{},"overview.html":{}}}],["manager",{"_index":265,"title":{},"body":{"injectables/AuthService.html":{},"modules/RedisModule.html":{},"dependencies.html":{}}}],["matches",{"_index":433,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/LoginUserDto.html":{}}}],["matches(/^(?=.*[a",{"_index":437,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/LoginUserDto.html":{}}}],["matching",{"_index":27,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/Auth.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"entities/Bank.html":{},"controllers/BankController.html":{},"modules/BankModule.html":{},"injectables/BankService.html":{},"classes/BaseEntity.html":{},"classes/CreateAuthDto.html":{},"classes/CreateBankDto.html":{},"classes/CreateUserDto.html":{},"modules/DataBaseModule.html":{},"injectables/GoogleAuthGuard.html":{},"injectables/GoogleAuthStrategy.html":{},"injectables/KakaoAuthGuard.html":{},"injectables/KakaoAuthStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalAuthStrategy.html":{},"classes/LoginUserDto.html":{},"modules/MailModule.html":{},"injectables/MailService.html":{},"modules/RedisModule.html":{},"interfaces/RequestUserInterface.html":{},"injectables/TokenGuard.html":{},"interfaces/TokenInterface.html":{},"injectables/TokenStrategy.html":{},"classes/UpdateAuthDto.html":{},"classes/UpdateBankDto.html":{},"classes/UpdateUserDto.html":{},"entities/User.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{}}}],["metadata",{"_index":704,"title":{},"body":{"dependencies.html":{}}}],["methods",{"_index":8,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/BankController.html":{},"injectables/BankService.html":{},"injectables/GoogleAuthStrategy.html":{},"injectables/KakaoAuthStrategy.html":{},"injectables/LocalAuthStrategy.html":{},"injectables/MailService.html":{},"injectables/TokenStrategy.html":{},"injectables/UserService.html":{}}}],["minlength",{"_index":434,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/LoginUserDto.html":{}}}],["minlength(2",{"_index":435,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["minlength(7",{"_index":436,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/LoginUserDto.html":{}}}],["miscellaneous",{"_index":708,"title":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{}},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{}}}],["mit",{"_index":794,"title":{},"body":{"index.html":{}}}],["mm",{"_index":619,"title":{},"body":{"entities/User.html":{}}}],["mode",{"_index":738,"title":{},"body":{"index.html":{}}}],["module",{"_index":28,"title":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/BankModule.html":{},"modules/DataBaseModule.html":{},"modules/MailModule.html":{},"modules/RedisModule.html":{},"modules/UserModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/BankModule.html":{},"modules/DataBaseModule.html":{},"modules/MailModule.html":{},"modules/RedisModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["modules",{"_index":30,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/BankModule.html":{},"modules/DataBaseModule.html":{},"modules/MailModule.html":{},"modules/RedisModule.html":{},"modules/UserModule.html":{},"modules.html":{},"overview.html":{}}}],["more",{"_index":757,"title":{},"body":{"index.html":{}}}],["mysql",{"_index":66,"title":{},"body":{"modules/AppModule.html":{},"modules/DataBaseModule.html":{}}}],["mysql2",{"_index":696,"title":{},"body":{"dependencies.html":{}}}],["mysql_database",{"_index":88,"title":{},"body":{"modules/AppModule.html":{}}}],["mysql_host",{"_index":84,"title":{},"body":{"modules/AppModule.html":{}}}],["mysql_port",{"_index":89,"title":{},"body":{"modules/AppModule.html":{}}}],["mysql_root_password",{"_index":87,"title":{},"body":{"modules/AppModule.html":{}}}],["mysql_user",{"_index":86,"title":{},"body":{"modules/AppModule.html":{}}}],["myśliwiec",{"_index":809,"title":{},"body":{"index.html":{}}}],["name",{"_index":136,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/BankController.html":{},"injectables/BankService.html":{},"injectables/GoogleAuthStrategy.html":{},"injectables/KakaoAuthStrategy.html":{},"injectables/LocalAuthStrategy.html":{},"injectables/MailService.html":{},"injectables/TokenStrategy.html":{},"injectables/UserService.html":{}}}],["naver",{"_index":712,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["need",{"_index":778,"title":{},"body":{"index.html":{}}}],["nest",{"_index":727,"title":{},"body":{"index.html":{}}}],["nestframework",{"_index":813,"title":{},"body":{"index.html":{}}}],["nestjs",{"_index":754,"title":{},"body":{"index.html":{}}}],["nestjs/common",{"_index":17,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"controllers/BankController.html":{},"modules/BankModule.html":{},"injectables/BankService.html":{},"modules/DataBaseModule.html":{},"injectables/GoogleAuthGuard.html":{},"injectables/GoogleAuthStrategy.html":{},"injectables/KakaoAuthGuard.html":{},"injectables/KakaoAuthStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalAuthStrategy.html":{},"modules/MailModule.html":{},"injectables/MailService.html":{},"modules/RedisModule.html":{},"injectables/TokenGuard.html":{},"injectables/TokenStrategy.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"dependencies.html":{}}}],["nestjs/common/cache",{"_index":264,"title":{},"body":{"injectables/AuthService.html":{},"modules/RedisModule.html":{}}}],["nestjs/config",{"_index":53,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"modules/DataBaseModule.html":{},"injectables/GoogleAuthStrategy.html":{},"injectables/KakaoAuthStrategy.html":{},"modules/MailModule.html":{},"injectables/MailService.html":{},"modules/RedisModule.html":{},"injectables/TokenStrategy.html":{},"dependencies.html":{}}}],["nestjs/core",{"_index":666,"title":{},"body":{"dependencies.html":{}}}],["nestjs/jwt",{"_index":224,"title":{},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{},"dependencies.html":{}}}],["nestjs/mapped",{"_index":578,"title":{},"body":{"classes/UpdateAuthDto.html":{},"classes/UpdateBankDto.html":{},"classes/UpdateUserDto.html":{},"dependencies.html":{}}}],["nestjs/passport",{"_index":454,"title":{},"body":{"injectables/GoogleAuthGuard.html":{},"injectables/GoogleAuthStrategy.html":{},"injectables/KakaoAuthGuard.html":{},"injectables/KakaoAuthStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalAuthStrategy.html":{},"injectables/TokenGuard.html":{},"injectables/TokenStrategy.html":{},"dependencies.html":{}}}],["nestjs/platform",{"_index":669,"title":{},"body":{"dependencies.html":{}}}],["nestjs/swagger",{"_index":169,"title":{},"body":{"controllers/AuthController.html":{},"controllers/BankController.html":{},"classes/CreateBankDto.html":{},"classes/CreateUserDto.html":{},"classes/LoginUserDto.html":{},"dependencies.html":{}}}],["nestjs/typeorm",{"_index":356,"title":{},"body":{"modules/BankModule.html":{},"injectables/BankService.html":{},"modules/DataBaseModule.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"dependencies.html":{}}}],["new",{"_index":277,"title":{},"body":{"injectables/AuthService.html":{},"injectables/BankService.html":{},"injectables/GoogleAuthStrategy.html":{},"injectables/KakaoAuthStrategy.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["node.js",{"_index":718,"title":{},"body":{"index.html":{}}}],["nodemailer",{"_index":536,"title":{},"body":{"injectables/MailService.html":{},"dependencies.html":{}}}],["nodemailer/lib/mailer",{"_index":534,"title":{},"body":{"injectables/MailService.html":{}}}],["notfoundexception",{"_index":371,"title":{},"body":{"injectables/BankService.html":{},"injectables/UserService.html":{}}}],["npm",{"_index":732,"title":{},"body":{"index.html":{}}}],["nullable",{"_index":604,"title":{},"body":{"entities/User.html":{}}}],["num",{"_index":289,"title":{},"body":{"injectables/AuthService.html":{}}}],["number",{"_index":299,"title":{},"body":{"entities/Bank.html":{},"classes/CreateBankDto.html":{},"classes/CreateUserDto.html":{},"entities/User.html":{}}}],["oauth2",{"_index":471,"title":{},"body":{"injectables/GoogleAuthStrategy.html":{},"dependencies.html":{}}}],["offer",{"_index":791,"title":{},"body":{"index.html":{}}}],["official",{"_index":767,"title":{},"body":{"index.html":{}}}],["open",{"_index":796,"title":{},"body":{"index.html":{}}}],["optional",{"_index":137,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/BankController.html":{},"injectables/BankService.html":{},"classes/CreateUserDto.html":{},"injectables/GoogleAuthStrategy.html":{},"injectables/KakaoAuthStrategy.html":{},"injectables/LocalAuthStrategy.html":{},"classes/LoginUserDto.html":{},"injectables/MailService.html":{},"injectables/TokenStrategy.html":{},"entities/User.html":{},"injectables/UserService.html":{}}}],["options",{"_index":533,"title":{},"body":{"injectables/MailService.html":{}}}],["otp",{"_index":288,"title":{},"body":{"injectables/AuthService.html":{}}}],["out",{"_index":49,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/BankModule.html":{},"modules/MailModule.html":{},"modules/UserModule.html":{},"index.html":{},"overview.html":{}}}],["overview",{"_index":819,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["package",{"_index":660,"title":{"dependencies.html":{},"properties.html":{}},"body":{}}],["param",{"_index":332,"title":{},"body":{"controllers/BankController.html":{}}}],["parameters",{"_index":135,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/BankController.html":{},"injectables/BankService.html":{},"injectables/GoogleAuthStrategy.html":{},"injectables/KakaoAuthStrategy.html":{},"injectables/LocalAuthStrategy.html":{},"injectables/MailService.html":{},"injectables/TokenStrategy.html":{},"injectables/UserService.html":{}}}],["parser",{"_index":676,"title":{},"body":{"dependencies.html":{}}}],["part",{"_index":780,"title":{},"body":{"index.html":{}}}],["partialtype",{"_index":577,"title":{},"body":{"classes/UpdateAuthDto.html":{},"classes/UpdateBankDto.html":{},"classes/UpdateUserDto.html":{}}}],["partialtype(createauthdto",{"_index":576,"title":{},"body":{"classes/UpdateAuthDto.html":{}}}],["partialtype(createbankdto",{"_index":582,"title":{},"body":{"classes/UpdateBankDto.html":{}}}],["partialtype(createuserdto",{"_index":585,"title":{},"body":{"classes/UpdateUserDto.html":{}}}],["pass",{"_index":273,"title":{},"body":{"injectables/AuthService.html":{},"injectables/MailService.html":{}}}],["pass_js",{"_index":74,"title":{},"body":{"modules/AppModule.html":{},"modules/DataBaseModule.html":{}}}],["passport",{"_index":469,"title":{},"body":{"injectables/GoogleAuthStrategy.html":{},"injectables/KakaoAuthStrategy.html":{},"injectables/LocalAuthStrategy.html":{},"injectables/TokenStrategy.html":{},"dependencies.html":{}}}],["passportstrategy",{"_index":457,"title":{},"body":{"injectables/GoogleAuthStrategy.html":{},"injectables/KakaoAuthStrategy.html":{},"injectables/LocalAuthStrategy.html":{},"injectables/TokenStrategy.html":{}}}],["passportstrategy(strategy",{"_index":511,"title":{},"body":{"injectables/LocalAuthStrategy.html":{},"injectables/TokenStrategy.html":{}}}],["passreqtocallback",{"_index":480,"title":{},"body":{"injectables/GoogleAuthStrategy.html":{}}}],["password",{"_index":73,"title":{},"body":{"modules/AppModule.html":{},"classes/CreateUserDto.html":{},"modules/DataBaseModule.html":{},"injectables/LocalAuthStrategy.html":{},"classes/LoginUserDto.html":{},"modules/RedisModule.html":{},"entities/User.html":{}}}],["pg",{"_index":617,"title":{},"body":{"entities/User.html":{}}}],["phone",{"_index":414,"title":{},"body":{"classes/CreateUserDto.html":{},"entities/User.html":{}}}],["picture",{"_index":482,"title":{},"body":{"injectables/GoogleAuthStrategy.html":{}}}],["please",{"_index":760,"title":{},"body":{"index.html":{}}}],["port",{"_index":69,"title":{},"body":{"modules/AppModule.html":{},"modules/DataBaseModule.html":{},"modules/RedisModule.html":{}}}],["post",{"_index":165,"title":{},"body":{"controllers/AuthController.html":{},"controllers/BankController.html":{}}}],["post('/create",{"_index":344,"title":{},"body":{"controllers/BankController.html":{}}}],["post('/email/send",{"_index":141,"title":{},"body":{"controllers/AuthController.html":{}}}],["post('/login",{"_index":197,"title":{},"body":{"controllers/AuthController.html":{}}}],["post('/signup",{"_index":189,"title":{},"body":{"controllers/AuthController.html":{}}}],["prefix",{"_index":121,"title":{},"body":{"controllers/AuthController.html":{},"controllers/BankController.html":{},"controllers/UserController.html":{}}}],["primarygeneratedcolumn",{"_index":393,"title":{},"body":{"classes/BaseEntity.html":{}}}],["primarygeneratedcolumn('uuid",{"_index":389,"title":{},"body":{"classes/BaseEntity.html":{}}}],["private",{"_index":266,"title":{},"body":{"injectables/AuthService.html":{},"injectables/BankService.html":{},"injectables/GoogleAuthStrategy.html":{},"injectables/KakaoAuthStrategy.html":{},"injectables/MailService.html":{},"injectables/TokenStrategy.html":{},"injectables/UserService.html":{}}}],["production",{"_index":740,"title":{},"body":{"index.html":{}}}],["profile",{"_index":464,"title":{},"body":{"injectables/GoogleAuthStrategy.html":{},"injectables/KakaoAuthStrategy.html":{}}}],["profile._json.kakao_account",{"_index":506,"title":{},"body":{"injectables/KakaoAuthStrategy.html":{}}}],["profile._json.properties",{"_index":505,"title":{},"body":{"injectables/KakaoAuthStrategy.html":{}}}],["profile_image",{"_index":504,"title":{},"body":{"injectables/KakaoAuthStrategy.html":{}}}],["profileimg",{"_index":415,"title":{},"body":{"classes/CreateUserDto.html":{},"injectables/GoogleAuthStrategy.html":{},"injectables/KakaoAuthStrategy.html":{},"entities/User.html":{}}}],["progressive",{"_index":717,"title":{},"body":{"index.html":{}}}],["project",{"_index":730,"title":{},"body":{"index.html":{}}}],["properties",{"_index":296,"title":{"properties.html":{}},"body":{"entities/Bank.html":{},"classes/BaseEntity.html":{},"classes/CreateBankDto.html":{},"classes/CreateUserDto.html":{},"classes/LoginUserDto.html":{},"injectables/MailService.html":{},"interfaces/RequestUserInterface.html":{},"interfaces/TokenInterface.html":{},"entities/User.html":{},"properties.html":{}}}],["protocol",{"_index":620,"title":{},"body":{"entities/User.html":{}}}],["provider",{"_index":261,"title":{},"body":{"injectables/AuthService.html":{},"classes/CreateUserDto.html":{},"injectables/GoogleAuthGuard.html":{},"injectables/GoogleAuthStrategy.html":{},"injectables/KakaoAuthGuard.html":{},"injectables/KakaoAuthStrategy.html":{},"injectables/LocalAuthGuard.html":{},"entities/User.html":{},"miscellaneous/enumerations.html":{}}}],["provider.google",{"_index":459,"title":{},"body":{"injectables/GoogleAuthStrategy.html":{}}}],["provider.kakao",{"_index":499,"title":{},"body":{"injectables/KakaoAuthStrategy.html":{}}}],["provider.local",{"_index":269,"title":{},"body":{"injectables/AuthService.html":{},"entities/User.html":{}}}],["providers",{"_index":35,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/BankModule.html":{},"modules/MailModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["public",{"_index":234,"title":{},"body":{"injectables/AuthService.html":{},"entities/Bank.html":{},"classes/BaseEntity.html":{},"entities/User.html":{}}}],["put",{"_index":333,"title":{},"body":{"controllers/BankController.html":{}}}],["put('/:id",{"_index":349,"title":{},"body":{"controllers/BankController.html":{}}}],["questions",{"_index":758,"title":{},"body":{"index.html":{}}}],["r",{"_index":616,"title":{},"body":{"entities/User.html":{}}}],["read",{"_index":804,"title":{},"body":{"index.html":{}}}],["readonly",{"_index":23,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/BankController.html":{},"injectables/GoogleAuthStrategy.html":{},"injectables/KakaoAuthStrategy.html":{},"injectables/LocalAuthStrategy.html":{},"injectables/MailService.html":{},"injectables/TokenStrategy.html":{},"controllers/UserController.html":{}}}],["real",{"_index":774,"title":{},"body":{"index.html":{}}}],["redis",{"_index":545,"title":{},"body":{"modules/RedisModule.html":{},"dependencies.html":{}}}],["redis/redis.module",{"_index":63,"title":{},"body":{"modules/AppModule.html":{}}}],["redis_host",{"_index":101,"title":{},"body":{"modules/AppModule.html":{}}}],["redis_password",{"_index":104,"title":{},"body":{"modules/AppModule.html":{}}}],["redis_port",{"_index":102,"title":{},"body":{"modules/AppModule.html":{}}}],["redis_ttl",{"_index":105,"title":{},"body":{"modules/AppModule.html":{}}}],["redis_user",{"_index":103,"title":{},"body":{"modules/AppModule.html":{}}}],["redismodule",{"_index":44,"title":{"modules/RedisModule.html":{}},"body":{"modules/AppModule.html":{},"modules/RedisModule.html":{},"modules.html":{},"overview.html":{}}}],["redisstore",{"_index":544,"title":{},"body":{"modules/RedisModule.html":{}}}],["reflect",{"_index":703,"title":{},"body":{"dependencies.html":{}}}],["refreshtoken",{"_index":463,"title":{},"body":{"injectables/GoogleAuthStrategy.html":{},"injectables/KakaoAuthStrategy.html":{}}}],["repository",{"_index":363,"title":{},"body":{"injectables/BankService.html":{},"injectables/UserService.html":{},"index.html":{}}}],["req",{"_index":138,"title":{},"body":{"controllers/AuthController.html":{}}}],["req.user",{"_index":199,"title":{},"body":{"controllers/AuthController.html":{}}}],["request",{"_index":557,"title":{},"body":{"interfaces/RequestUserInterface.html":{}}}],["requestuserinterface",{"_index":132,"title":{"interfaces/RequestUserInterface.html":{}},"body":{"controllers/AuthController.html":{},"interfaces/RequestUserInterface.html":{},"coverage.html":{}}}],["reset",{"_index":48,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/BankModule.html":{},"modules/MailModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["resources",{"_index":750,"title":{},"body":{"index.html":{}}}],["results",{"_index":26,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/Auth.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"entities/Bank.html":{},"controllers/BankController.html":{},"modules/BankModule.html":{},"injectables/BankService.html":{},"classes/BaseEntity.html":{},"classes/CreateAuthDto.html":{},"classes/CreateBankDto.html":{},"classes/CreateUserDto.html":{},"modules/DataBaseModule.html":{},"injectables/GoogleAuthGuard.html":{},"injectables/GoogleAuthStrategy.html":{},"injectables/KakaoAuthGuard.html":{},"injectables/KakaoAuthStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalAuthStrategy.html":{},"classes/LoginUserDto.html":{},"modules/MailModule.html":{},"injectables/MailService.html":{},"modules/RedisModule.html":{},"interfaces/RequestUserInterface.html":{},"injectables/TokenGuard.html":{},"interfaces/TokenInterface.html":{},"injectables/TokenStrategy.html":{},"classes/UpdateAuthDto.html":{},"classes/UpdateBankDto.html":{},"classes/UpdateUserDto.html":{},"entities/User.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{}}}],["return",{"_index":24,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/BankController.html":{},"injectables/BankService.html":{},"injectables/LocalAuthStrategy.html":{},"injectables/MailService.html":{},"modules/RedisModule.html":{},"injectables/TokenStrategy.html":{},"entities/User.html":{},"injectables/UserService.html":{}}}],["returns",{"_index":14,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/BankController.html":{},"injectables/BankService.html":{},"injectables/GoogleAuthStrategy.html":{},"injectables/KakaoAuthStrategy.html":{},"injectables/LocalAuthStrategy.html":{},"injectables/MailService.html":{},"injectables/TokenStrategy.html":{},"injectables/UserService.html":{}}}],["root",{"_index":72,"title":{},"body":{"modules/AppModule.html":{},"modules/DataBaseModule.html":{}}}],["root/app.controller",{"_index":62,"title":{},"body":{"modules/AppModule.html":{}}}],["root/app.service",{"_index":19,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{}}}],["run",{"_index":734,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":705,"title":{},"body":{"dependencies.html":{}}}],["s",{"_index":614,"title":{},"body":{"entities/User.html":{}}}],["saltvalue",{"_index":608,"title":{},"body":{"entities/User.html":{}}}],["scalable",{"_index":722,"title":{},"body":{"index.html":{}}}],["scope",{"_index":479,"title":{},"body":{"injectables/GoogleAuthStrategy.html":{}}}],["secret",{"_index":284,"title":{},"body":{"injectables/AuthService.html":{}}}],["secretorkey",{"_index":570,"title":{},"body":{"injectables/TokenStrategy.html":{}}}],["sendemailotp",{"_index":236,"title":{},"body":{"injectables/AuthService.html":{}}}],["sendemailotp(email",{"_index":250,"title":{},"body":{"injectables/AuthService.html":{}}}],["sendmail",{"_index":528,"title":{},"body":{"injectables/MailService.html":{}}}],["sendmail(options",{"_index":530,"title":{},"body":{"injectables/MailService.html":{}}}],["server",{"_index":723,"title":{},"body":{"index.html":{}}}],["service",{"_index":514,"title":{},"body":{"injectables/LocalAuthStrategy.html":{},"injectables/MailService.html":{}}}],["setup",{"_index":731,"title":{},"body":{"index.html":{}}}],["side",{"_index":724,"title":{},"body":{"index.html":{}}}],["signup",{"_index":130,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["signup(@body",{"_index":190,"title":{},"body":{"controllers/AuthController.html":{}}}],["signup(dto",{"_index":158,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["signupmail",{"_index":237,"title":{},"body":{"injectables/AuthService.html":{}}}],["signupmail(email",{"_index":253,"title":{},"body":{"injectables/AuthService.html":{}}}],["source",{"_index":4,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/Auth.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"entities/Bank.html":{},"controllers/BankController.html":{},"modules/BankModule.html":{},"injectables/BankService.html":{},"classes/BaseEntity.html":{},"classes/CreateAuthDto.html":{},"classes/CreateBankDto.html":{},"classes/CreateUserDto.html":{},"modules/DataBaseModule.html":{},"injectables/GoogleAuthGuard.html":{},"injectables/GoogleAuthStrategy.html":{},"injectables/KakaoAuthGuard.html":{},"injectables/KakaoAuthStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalAuthStrategy.html":{},"classes/LoginUserDto.html":{},"modules/MailModule.html":{},"injectables/MailService.html":{},"modules/RedisModule.html":{},"interfaces/RequestUserInterface.html":{},"injectables/TokenGuard.html":{},"interfaces/TokenInterface.html":{},"injectables/TokenStrategy.html":{},"classes/UpdateAuthDto.html":{},"classes/UpdateBankDto.html":{},"classes/UpdateUserDto.html":{},"entities/User.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"index.html":{}}}],["sponsors",{"_index":799,"title":{},"body":{"index.html":{}}}],["src/.../main.ts",{"_index":714,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../provider.enum.ts",{"_index":710,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/app.controller.ts",{"_index":6,"title":{},"body":{"controllers/AppController.html":{},"coverage.html":{}}}],["src/app.controller.ts:9",{"_index":13,"title":{},"body":{"controllers/AppController.html":{}}}],["src/app.module.ts",{"_index":50,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app.service.ts",{"_index":112,"title":{},"body":{"injectables/AppService.html":{},"coverage.html":{}}}],["src/app.service.ts:5",{"_index":113,"title":{},"body":{"injectables/AppService.html":{}}}],["src/auth/auth.controller.ts",{"_index":120,"title":{},"body":{"controllers/AuthController.html":{},"coverage.html":{}}}],["src/auth/auth.controller.ts:28",{"_index":161,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/auth/auth.controller.ts:39",{"_index":157,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/auth/auth.controller.ts:49",{"_index":134,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/auth/auth.controller.ts:56",{"_index":145,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/auth/auth.controller.ts:63",{"_index":148,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/auth/auth.controller.ts:73",{"_index":150,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/auth/auth.controller.ts:80",{"_index":153,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/auth/auth.controller.ts:89",{"_index":142,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/auth/auth.module.ts",{"_index":222,"title":{},"body":{"modules/AuthModule.html":{}}}],["src/auth/auth.service.ts",{"_index":232,"title":{},"body":{"injectables/AuthService.html":{},"coverage.html":{}}}],["src/auth/auth.service.ts:15",{"_index":243,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/auth.service.ts:25",{"_index":252,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/auth.service.ts:30",{"_index":249,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/auth.service.ts:46",{"_index":254,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/auth.service.ts:55",{"_index":246,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/auth.service.ts:66",{"_index":251,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/auth.service.ts:79",{"_index":244,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/dto/create",{"_index":396,"title":{},"body":{"classes/CreateAuthDto.html":{},"coverage.html":{}}}],["src/auth/dto/update",{"_index":575,"title":{},"body":{"classes/UpdateAuthDto.html":{},"coverage.html":{}}}],["src/auth/entities/auth.entity.ts",{"_index":118,"title":{},"body":{"classes/Auth.html":{},"coverage.html":{}}}],["src/auth/guard/google",{"_index":450,"title":{},"body":{"injectables/GoogleAuthGuard.html":{},"coverage.html":{}}}],["src/auth/guard/kakao",{"_index":496,"title":{},"body":{"injectables/KakaoAuthGuard.html":{},"coverage.html":{}}}],["src/auth/guard/local",{"_index":508,"title":{},"body":{"injectables/LocalAuthGuard.html":{},"coverage.html":{}}}],["src/auth/guard/token.guard.ts",{"_index":559,"title":{},"body":{"injectables/TokenGuard.html":{},"coverage.html":{}}}],["src/auth/interface/requestuser.interface.ts",{"_index":556,"title":{},"body":{"interfaces/RequestUserInterface.html":{},"coverage.html":{}}}],["src/auth/interface/token.interface.ts",{"_index":561,"title":{},"body":{"interfaces/TokenInterface.html":{},"coverage.html":{}}}],["src/auth/strategy/google",{"_index":455,"title":{},"body":{"injectables/GoogleAuthStrategy.html":{},"coverage.html":{}}}],["src/auth/strategy/kakao",{"_index":498,"title":{},"body":{"injectables/KakaoAuthStrategy.html":{},"coverage.html":{}}}],["src/auth/strategy/local",{"_index":510,"title":{},"body":{"injectables/LocalAuthStrategy.html":{},"coverage.html":{}}}],["src/auth/strategy/token.strategy.ts",{"_index":562,"title":{},"body":{"injectables/TokenStrategy.html":{},"coverage.html":{}}}],["src/auth/strategy/token.strategy.ts:21",{"_index":565,"title":{},"body":{"injectables/TokenStrategy.html":{}}}],["src/auth/strategy/token.strategy.ts:9",{"_index":563,"title":{},"body":{"injectables/TokenStrategy.html":{}}}],["src/bank/bank.controller.ts",{"_index":309,"title":{},"body":{"controllers/BankController.html":{},"coverage.html":{}}}],["src/bank/bank.controller.ts:22",{"_index":324,"title":{},"body":{"controllers/BankController.html":{}}}],["src/bank/bank.controller.ts:28",{"_index":327,"title":{},"body":{"controllers/BankController.html":{}}}],["src/bank/bank.controller.ts:35",{"_index":318,"title":{},"body":{"controllers/BankController.html":{}}}],["src/bank/bank.controller.ts:41",{"_index":321,"title":{},"body":{"controllers/BankController.html":{}}}],["src/bank/bank.controller.ts:48",{"_index":331,"title":{},"body":{"controllers/BankController.html":{}}}],["src/bank/bank.module.ts",{"_index":354,"title":{},"body":{"modules/BankModule.html":{}}}],["src/bank/bank.service.ts",{"_index":360,"title":{},"body":{"injectables/BankService.html":{},"coverage.html":{}}}],["src/bank/bank.service.ts:15",{"_index":367,"title":{},"body":{"injectables/BankService.html":{}}}],["src/bank/bank.service.ts:19",{"_index":369,"title":{},"body":{"injectables/BankService.html":{}}}],["src/bank/bank.service.ts:29",{"_index":365,"title":{},"body":{"injectables/BankService.html":{}}}],["src/bank/bank.service.ts:36",{"_index":366,"title":{},"body":{"injectables/BankService.html":{}}}],["src/bank/bank.service.ts:46",{"_index":370,"title":{},"body":{"injectables/BankService.html":{}}}],["src/bank/bank.service.ts:9",{"_index":364,"title":{},"body":{"injectables/BankService.html":{}}}],["src/bank/dto/create",{"_index":398,"title":{},"body":{"classes/CreateBankDto.html":{},"coverage.html":{}}}],["src/bank/dto/update",{"_index":581,"title":{},"body":{"classes/UpdateBankDto.html":{},"coverage.html":{}}}],["src/bank/entities/bank.entity.ts",{"_index":295,"title":{},"body":{"entities/Bank.html":{},"coverage.html":{}}}],["src/bank/entities/bank.entity.ts:10",{"_index":303,"title":{},"body":{"entities/Bank.html":{}}}],["src/bank/entities/bank.entity.ts:13",{"_index":301,"title":{},"body":{"entities/Bank.html":{}}}],["src/bank/entities/bank.entity.ts:7",{"_index":302,"title":{},"body":{"entities/Bank.html":{}}}],["src/bank/entities/base.entity.ts",{"_index":380,"title":{},"body":{"classes/BaseEntity.html":{},"coverage.html":{}}}],["src/bank/entities/base.entity.ts:10",{"_index":390,"title":{},"body":{"classes/BaseEntity.html":{}}}],["src/bank/entities/base.entity.ts:13",{"_index":386,"title":{},"body":{"classes/BaseEntity.html":{}}}],["src/bank/entities/base.entity.ts:16",{"_index":392,"title":{},"body":{"classes/BaseEntity.html":{}}}],["src/bank/entities/base.entity.ts:19",{"_index":388,"title":{},"body":{"classes/BaseEntity.html":{}}}],["src/db/db.module.ts",{"_index":439,"title":{},"body":{"modules/DataBaseModule.html":{}}}],["src/mail/mail.module.ts",{"_index":526,"title":{},"body":{"modules/MailModule.html":{}}}],["src/mail/mail.service.ts",{"_index":527,"title":{},"body":{"injectables/MailService.html":{},"coverage.html":{}}}],["src/mail/mail.service.ts:21",{"_index":532,"title":{},"body":{"injectables/MailService.html":{}}}],["src/mail/mail.service.ts:8",{"_index":529,"title":{},"body":{"injectables/MailService.html":{}}}],["src/main.ts",{"_index":656,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/redis/redis.module.ts",{"_index":542,"title":{},"body":{"modules/RedisModule.html":{}}}],["src/user/dto/create",{"_index":412,"title":{},"body":{"classes/CreateUserDto.html":{},"coverage.html":{}}}],["src/user/dto/login",{"_index":520,"title":{},"body":{"classes/LoginUserDto.html":{},"coverage.html":{}}}],["src/user/dto/update",{"_index":584,"title":{},"body":{"classes/UpdateUserDto.html":{},"coverage.html":{}}}],["src/user/entities/provider.enum.ts",{"_index":711,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/user/entities/user.entity.ts",{"_index":586,"title":{},"body":{"entities/User.html":{},"coverage.html":{}}}],["src/user/entities/user.entity.ts:11",{"_index":599,"title":{},"body":{"entities/User.html":{}}}],["src/user/entities/user.entity.ts:15",{"_index":591,"title":{},"body":{"entities/User.html":{}}}],["src/user/entities/user.entity.ts:18",{"_index":588,"title":{},"body":{"entities/User.html":{}}}],["src/user/entities/user.entity.ts:21",{"_index":592,"title":{},"body":{"entities/User.html":{}}}],["src/user/entities/user.entity.ts:24",{"_index":593,"title":{},"body":{"entities/User.html":{}}}],["src/user/entities/user.entity.ts:31",{"_index":598,"title":{},"body":{"entities/User.html":{}}}],["src/user/user.controller.ts",{"_index":624,"title":{},"body":{"controllers/UserController.html":{},"coverage.html":{}}}],["src/user/user.module.ts",{"_index":629,"title":{},"body":{"modules/UserModule.html":{}}}],["src/user/user.service.ts",{"_index":632,"title":{},"body":{"injectables/UserService.html":{},"coverage.html":{}}}],["src/user/user.service.ts:15",{"_index":635,"title":{},"body":{"injectables/UserService.html":{}}}],["src/user/user.service.ts:24",{"_index":638,"title":{},"body":{"injectables/UserService.html":{}}}],["src/user/user.service.ts:8",{"_index":634,"title":{},"body":{"injectables/UserService.html":{}}}],["start",{"_index":736,"title":{},"body":{"index.html":{}}}],["start:dev",{"_index":739,"title":{},"body":{"index.html":{}}}],["start:prodrun",{"_index":741,"title":{},"body":{"index.html":{}}}],["started",{"_index":716,"title":{"index.html":{}},"body":{}}],["starter",{"_index":729,"title":{},"body":{"index.html":{}}}],["statements",{"_index":645,"title":{},"body":{"coverage.html":{}}}],["stay",{"_index":783,"title":{},"body":{"index.html":{}}}],["store",{"_index":546,"title":{},"body":{"modules/RedisModule.html":{},"dependencies.html":{}}}],["strategy",{"_index":458,"title":{},"body":{"injectables/GoogleAuthStrategy.html":{},"injectables/KakaoAuthStrategy.html":{},"injectables/LocalAuthStrategy.html":{},"injectables/TokenStrategy.html":{}}}],["string",{"_index":15,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"entities/Bank.html":{},"controllers/BankController.html":{},"injectables/BankService.html":{},"classes/BaseEntity.html":{},"classes/CreateBankDto.html":{},"classes/CreateUserDto.html":{},"injectables/GoogleAuthStrategy.html":{},"injectables/KakaoAuthStrategy.html":{},"injectables/LocalAuthStrategy.html":{},"classes/LoginUserDto.html":{},"interfaces/TokenInterface.html":{},"entities/User.html":{},"injectables/UserService.html":{}}}],["subject",{"_index":280,"title":{},"body":{"injectables/AuthService.html":{}}}],["subscribed",{"_index":486,"title":{},"body":{"injectables/GoogleAuthStrategy.html":{},"injectables/KakaoAuthStrategy.html":{}}}],["super",{"_index":472,"title":{},"body":{"injectables/GoogleAuthStrategy.html":{},"injectables/KakaoAuthStrategy.html":{},"injectables/LocalAuthStrategy.html":{},"injectables/TokenStrategy.html":{}}}],["support",{"_index":759,"title":{},"body":{"index.html":{},"modules.html":{}}}],["svg",{"_index":816,"title":{},"body":{"modules.html":{}}}],["synchronize",{"_index":80,"title":{},"body":{"modules/AppModule.html":{},"modules/DataBaseModule.html":{}}}],["table",{"_index":659,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":658,"title":{},"body":{"coverage.html":{}}}],["test",{"_index":744,"title":{},"body":{"index.html":{}}}],["test:covresources",{"_index":747,"title":{},"body":{"index.html":{}}}],["test:e2e",{"_index":746,"title":{},"body":{"index.html":{}}}],["tests",{"_index":742,"title":{},"body":{"index.html":{}}}],["text",{"_index":292,"title":{},"body":{"injectables/AuthService.html":{}}}],["thanks",{"_index":798,"title":{},"body":{"index.html":{}}}],["this.appservice.gethello",{"_index":25,"title":{},"body":{"controllers/AppController.html":{}}}],["this.authservice.generatetoken(user.id",{"_index":201,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.authservice.sendemailotp(email",{"_index":214,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.authservice.signup(dto",{"_index":194,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.authservice.signupmail(user.email",{"_index":195,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.bankservice.create(dto",{"_index":346,"title":{},"body":{"controllers/BankController.html":{}}}],["this.bankservice.delete(id",{"_index":348,"title":{},"body":{"controllers/BankController.html":{}}}],["this.bankservice.getall",{"_index":341,"title":{},"body":{"controllers/BankController.html":{}}}],["this.bankservice.getbankbyid(id",{"_index":343,"title":{},"body":{"controllers/BankController.html":{}}}],["this.bankservice.update(id",{"_index":351,"title":{},"body":{"controllers/BankController.html":{}}}],["this.cache.set(email",{"_index":291,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.configservice.get('token_secret",{"_index":285,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.configservice.get('token_time",{"_index":287,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.generateotp",{"_index":290,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.jwtservice.sign(load",{"_index":283,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.mail",{"_index":537,"title":{},"body":{"injectables/MailService.html":{}}}],["this.mail.sendmail(options",{"_index":541,"title":{},"body":{"injectables/MailService.html":{}}}],["this.mailservice.sendmail",{"_index":279,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.password",{"_index":610,"title":{},"body":{"entities/User.html":{}}}],["this.profileimg",{"_index":612,"title":{},"body":{"entities/User.html":{}}}],["this.provider",{"_index":607,"title":{},"body":{"entities/User.html":{}}}],["this.repository.create(dto",{"_index":376,"title":{},"body":{"injectables/BankService.html":{},"injectables/UserService.html":{}}}],["this.repository.delete",{"_index":378,"title":{},"body":{"injectables/BankService.html":{}}}],["this.repository.find",{"_index":374,"title":{},"body":{"injectables/BankService.html":{}}}],["this.repository.findoneby",{"_index":375,"title":{},"body":{"injectables/BankService.html":{},"injectables/UserService.html":{}}}],["this.repository.save(bank",{"_index":377,"title":{},"body":{"injectables/BankService.html":{}}}],["this.repository.save(user",{"_index":641,"title":{},"body":{"injectables/UserService.html":{}}}],["this.repository.update(id",{"_index":379,"title":{},"body":{"injectables/BankService.html":{}}}],["this.service.login",{"_index":519,"title":{},"body":{"injectables/LocalAuthStrategy.html":{}}}],["this.userservice.create",{"_index":268,"title":{},"body":{"injectables/AuthService.html":{},"injectables/GoogleAuthStrategy.html":{},"injectables/KakaoAuthStrategy.html":{}}}],["this.userservice.getuserby('email",{"_index":271,"title":{},"body":{"injectables/AuthService.html":{},"injectables/GoogleAuthStrategy.html":{},"injectables/KakaoAuthStrategy.html":{}}}],["this.userservice.getuserby('id",{"_index":572,"title":{},"body":{"injectables/TokenStrategy.html":{}}}],["throw",{"_index":276,"title":{},"body":{"injectables/AuthService.html":{},"injectables/BankService.html":{},"injectables/GoogleAuthStrategy.html":{},"injectables/KakaoAuthStrategy.html":{},"injectables/UserService.html":{}}}],["time",{"_index":775,"title":{},"body":{"index.html":{}}}],["token",{"_index":200,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["token_secret",{"_index":94,"title":{},"body":{"modules/AppModule.html":{}}}],["token_time",{"_index":95,"title":{},"body":{"modules/AppModule.html":{}}}],["tokenguard",{"_index":178,"title":{"injectables/TokenGuard.html":{}},"body":{"controllers/AuthController.html":{},"injectables/TokenGuard.html":{},"coverage.html":{}}}],["tokeninterface",{"_index":259,"title":{"interfaces/TokenInterface.html":{}},"body":{"injectables/AuthService.html":{},"interfaces/TokenInterface.html":{},"injectables/TokenStrategy.html":{},"coverage.html":{}}}],["tokenstrategy",{"_index":221,"title":{"injectables/TokenStrategy.html":{}},"body":{"modules/AuthModule.html":{},"injectables/TokenStrategy.html":{},"coverage.html":{},"overview.html":{}}}],["touch",{"_index":806,"title":{},"body":{"index.html":{}}}],["transformer",{"_index":602,"title":{},"body":{"entities/User.html":{},"dependencies.html":{}}}],["true",{"_index":79,"title":{},"body":{"modules/AppModule.html":{},"modules/DataBaseModule.html":{},"injectables/GoogleAuthStrategy.html":{},"modules/RedisModule.html":{},"entities/User.html":{}}}],["true})@exclude",{"_index":590,"title":{},"body":{"entities/User.html":{}}}],["try",{"_index":483,"title":{},"body":{"injectables/GoogleAuthStrategy.html":{},"injectables/KakaoAuthStrategy.html":{},"entities/User.html":{}}}],["ttl",{"_index":552,"title":{},"body":{"modules/RedisModule.html":{}}}],["twitter",{"_index":812,"title":{},"body":{"index.html":{}}}],["type",{"_index":65,"title":{},"body":{"modules/AppModule.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"entities/Bank.html":{},"controllers/BankController.html":{},"injectables/BankService.html":{},"classes/BaseEntity.html":{},"classes/CreateBankDto.html":{},"classes/CreateUserDto.html":{},"modules/DataBaseModule.html":{},"injectables/GoogleAuthStrategy.html":{},"injectables/KakaoAuthStrategy.html":{},"injectables/LocalAuthStrategy.html":{},"classes/LoginUserDto.html":{},"injectables/MailService.html":{},"interfaces/RequestUserInterface.html":{},"interfaces/TokenInterface.html":{},"injectables/TokenStrategy.html":{},"entities/User.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["typeorm",{"_index":304,"title":{},"body":{"entities/Bank.html":{},"injectables/BankService.html":{},"classes/BaseEntity.html":{},"entities/User.html":{},"injectables/UserService.html":{},"dependencies.html":{}}}],["typeormmodule",{"_index":355,"title":{},"body":{"modules/BankModule.html":{},"modules/DataBaseModule.html":{},"modules/UserModule.html":{}}}],["typeormmodule.forfeature([bank",{"_index":359,"title":{},"body":{"modules/BankModule.html":{}}}],["typeormmodule.forfeature([user",{"_index":631,"title":{},"body":{"modules/UserModule.html":{}}}],["typeormmodule.forroot",{"_index":64,"title":{},"body":{"modules/AppModule.html":{}}}],["typeormmodule.forrootasync",{"_index":440,"title":{},"body":{"modules/DataBaseModule.html":{}}}],["types",{"_index":579,"title":{},"body":{"classes/UpdateAuthDto.html":{},"classes/UpdateBankDto.html":{},"classes/UpdateUserDto.html":{},"dependencies.html":{}}}],["types/bcrypt",{"_index":673,"title":{},"body":{"dependencies.html":{}}}],["types/cookie",{"_index":675,"title":{},"body":{"dependencies.html":{}}}],["types/gravatar",{"_index":678,"title":{},"body":{"dependencies.html":{}}}],["types/hapi__joi",{"_index":680,"title":{},"body":{"dependencies.html":{}}}],["types/nodemailer",{"_index":682,"title":{},"body":{"dependencies.html":{}}}],["types/passport",{"_index":684,"title":{},"body":{"dependencies.html":{}}}],["typescript",{"_index":728,"title":{},"body":{"index.html":{}}}],["undefined",{"_index":597,"title":{},"body":{"entities/User.html":{}}}],["unique",{"_index":605,"title":{},"body":{"entities/User.html":{}}}],["unit",{"_index":743,"title":{},"body":{"index.html":{}}}],["unknown",{"_index":139,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/BankController.html":{},"injectables/BankService.html":{},"injectables/LocalAuthStrategy.html":{},"injectables/TokenStrategy.html":{},"injectables/UserService.html":{}}}],["unlicensed",{"_index":827,"title":{},"body":{"properties.html":{}}}],["update",{"_index":314,"title":{},"body":{"controllers/BankController.html":{},"injectables/BankService.html":{}}}],["update(@param('id",{"_index":350,"title":{},"body":{"controllers/BankController.html":{}}}],["update(id",{"_index":328,"title":{},"body":{"controllers/BankController.html":{},"injectables/BankService.html":{}}}],["updateat",{"_index":383,"title":{},"body":{"classes/BaseEntity.html":{}}}],["updateauthdto",{"_index":574,"title":{"classes/UpdateAuthDto.html":{}},"body":{"classes/UpdateAuthDto.html":{},"coverage.html":{}}}],["updatebankdto",{"_index":329,"title":{"classes/UpdateBankDto.html":{}},"body":{"controllers/BankController.html":{},"injectables/BankService.html":{},"classes/UpdateBankDto.html":{},"coverage.html":{}}}],["updatedatecolumn",{"_index":391,"title":{},"body":{"classes/BaseEntity.html":{}}}],["updates",{"_index":785,"title":{},"body":{"index.html":{}}}],["updateuserdto",{"_index":583,"title":{"classes/UpdateUserDto.html":{}},"body":{"classes/UpdateUserDto.html":{},"coverage.html":{}}}],["usefactory",{"_index":441,"title":{},"body":{"modules/DataBaseModule.html":{},"modules/RedisModule.html":{}}}],["useguards",{"_index":166,"title":{},"body":{"controllers/AuthController.html":{}}}],["useguards(googleauthguard",{"_index":204,"title":{},"body":{"controllers/AuthController.html":{}}}],["useguards(googleauthguard)@get('/google",{"_index":144,"title":{},"body":{"controllers/AuthController.html":{}}}],["useguards(googleauthguard)@get('/google/callback",{"_index":147,"title":{},"body":{"controllers/AuthController.html":{}}}],["useguards(kakaoauthguard",{"_index":209,"title":{},"body":{"controllers/AuthController.html":{}}}],["useguards(kakaoauthguard)@get('/kakao",{"_index":149,"title":{},"body":{"controllers/AuthController.html":{}}}],["useguards(kakaoauthguard)@get('/kakao/callback",{"_index":152,"title":{},"body":{"controllers/AuthController.html":{}}}],["useguards(localauthguard",{"_index":196,"title":{},"body":{"controllers/AuthController.html":{}}}],["useguards(tokenguard",{"_index":202,"title":{},"body":{"controllers/AuthController.html":{}}}],["useguards(tokenguard)@get",{"_index":133,"title":{},"body":{"controllers/AuthController.html":{}}}],["user",{"_index":192,"title":{"entities/User.html":{}},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"entities/Bank.html":{},"classes/CreateBankDto.html":{},"injectables/GoogleAuthStrategy.html":{},"injectables/KakaoAuthStrategy.html":{},"injectables/MailService.html":{},"interfaces/RequestUserInterface.html":{},"entities/User.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["user.dto",{"_index":173,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/UpdateUserDto.html":{},"injectables/UserService.html":{}}}],["user.dto.ts",{"_index":413,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/LoginUserDto.html":{},"classes/UpdateUserDto.html":{},"coverage.html":{}}}],["user.dto.ts:13",{"_index":522,"title":{},"body":{"classes/LoginUserDto.html":{}}}],["user.dto.ts:17",{"_index":431,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["user.dto.ts:23",{"_index":424,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["user.dto.ts:27",{"_index":418,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["user.dto.ts:31",{"_index":427,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["user.dto.ts:34",{"_index":429,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["user.dto.ts:37",{"_index":428,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["user.dto.ts:7",{"_index":521,"title":{},"body":{"classes/LoginUserDto.html":{}}}],["user.password",{"_index":275,"title":{},"body":{"injectables/AuthService.html":{}}}],["user.provider",{"_index":484,"title":{},"body":{"injectables/GoogleAuthStrategy.html":{},"injectables/KakaoAuthStrategy.html":{}}}],["user/dto/create",{"_index":172,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/UpdateUserDto.html":{},"injectables/UserService.html":{}}}],["user/dto/login",{"_index":181,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["user/entities/provider.enum",{"_index":262,"title":{},"body":{"injectables/AuthService.html":{},"classes/CreateUserDto.html":{},"injectables/GoogleAuthGuard.html":{},"injectables/GoogleAuthStrategy.html":{},"injectables/KakaoAuthGuard.html":{},"injectables/KakaoAuthStrategy.html":{},"injectables/LocalAuthGuard.html":{},"entities/User.html":{}}}],["user/entities/user.entity",{"_index":558,"title":{},"body":{"interfaces/RequestUserInterface.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{}}}],["user/user.controller",{"_index":630,"title":{},"body":{"modules/UserModule.html":{}}}],["user/user.module",{"_index":58,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{}}}],["user/user.service",{"_index":258,"title":{},"body":{"injectables/AuthService.html":{},"injectables/GoogleAuthStrategy.html":{},"injectables/KakaoAuthStrategy.html":{},"injectables/TokenStrategy.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{}}}],["usercontroller",{"_index":623,"title":{"controllers/UserController.html":{}},"body":{"controllers/UserController.html":{},"modules/UserModule.html":{},"coverage.html":{}}}],["userid",{"_index":247,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/TokenInterface.html":{}}}],["usermodule",{"_index":45,"title":{"modules/UserModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/UserModule.html":{},"modules.html":{},"overview.html":{}}}],["username",{"_index":71,"title":{},"body":{"modules/AppModule.html":{},"classes/CreateUserDto.html":{},"modules/DataBaseModule.html":{},"injectables/GoogleAuthStrategy.html":{},"injectables/KakaoAuthStrategy.html":{},"modules/RedisModule.html":{},"entities/User.html":{}}}],["usernamefield",{"_index":518,"title":{},"body":{"injectables/LocalAuthStrategy.html":{}}}],["userservice",{"_index":240,"title":{"injectables/UserService.html":{}},"body":{"injectables/AuthService.html":{},"injectables/GoogleAuthStrategy.html":{},"injectables/KakaoAuthStrategy.html":{},"injectables/TokenStrategy.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"coverage.html":{},"overview.html":{}}}],["using",{"_index":776,"title":{},"body":{"index.html":{}}}],["validate",{"_index":460,"title":{},"body":{"injectables/GoogleAuthStrategy.html":{},"injectables/KakaoAuthStrategy.html":{},"injectables/LocalAuthStrategy.html":{},"injectables/TokenStrategy.html":{}}}],["validate(accesstoken",{"_index":462,"title":{},"body":{"injectables/GoogleAuthStrategy.html":{},"injectables/KakaoAuthStrategy.html":{}}}],["validate(email",{"_index":515,"title":{},"body":{"injectables/LocalAuthStrategy.html":{}}}],["validate(load",{"_index":564,"title":{},"body":{"injectables/TokenStrategy.html":{}}}],["validationschema",{"_index":82,"title":{},"body":{"modules/AppModule.html":{}}}],["validator",{"_index":410,"title":{},"body":{"classes/CreateBankDto.html":{},"classes/CreateUserDto.html":{},"classes/LoginUserDto.html":{},"dependencies.html":{}}}],["value",{"_index":637,"title":{},"body":{"injectables/UserService.html":{},"miscellaneous/enumerations.html":{}}}],["verifycallback",{"_index":466,"title":{},"body":{"injectables/GoogleAuthStrategy.html":{}}}],["version",{"_index":825,"title":{},"body":{"properties.html":{}}}],["video",{"_index":768,"title":{},"body":{"index.html":{}}}],["visit",{"_index":755,"title":{},"body":{"index.html":{}}}],["visualize",{"_index":770,"title":{},"body":{"index.html":{}}}],["watch",{"_index":737,"title":{},"body":{"index.html":{}}}],["website",{"_index":810,"title":{},"body":{"index.html":{}}}],["working",{"_index":753,"title":{},"body":{"index.html":{}}}],["x",{"_index":787,"title":{},"body":{"index.html":{}}}],["you'd",{"_index":802,"title":{},"body":{"index.html":{}}}],["z\\d$@$!%*#?&]{8",{"_index":438,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/LoginUserDto.html":{}}}],["z\\d$@$!%*#?&]{8,}$/)@apiproperty({example",{"_index":422,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/LoginUserDto.html":{}}}],["z])(?=.*\\d)(?=.*[$@$!%*#?&])[a",{"_index":421,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/LoginUserDto.html":{}}}],["za",{"_index":420,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/LoginUserDto.html":{}}}],["zoom",{"_index":47,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/BankModule.html":{},"modules/MailModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"controllers/AppController.html":{"url":"controllers/AppController.html","title":"controller - AppController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AppController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.controller.ts\n        \n\n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                getHello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        getHello\n                        \n                    \n                \n            \n            \n                \n                        \n                    getHello()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n                    \n                        \n                            Defined in src/app.controller.ts:9\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get } from '@nestjs/common';\nimport { AppService } from '@root/app.service';\n\n@Controller()\nexport class AppController {\n  constructor(private readonly appService: AppService) {}\n\n  @Get()\n  getHello(): string {\n    return this.appService.getHello();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_providers\n\n\n\ncluster_AppModule_imports\n\n\n\n\nAuthModule\n\nAuthModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAuthModule->AppModule\n\n\n\n\n\nBankModule\n\nBankModule\n\nAppModule -->\n\nBankModule->AppModule\n\n\n\n\n\nDataBaseModule\n\nDataBaseModule\n\nAppModule -->\n\nDataBaseModule->AppModule\n\n\n\n\n\nMailModule\n\nMailModule\n\nAppModule -->\n\nMailModule->AppModule\n\n\n\n\n\nRedisModule\n\nRedisModule\n\nAppModule -->\n\nRedisModule->AppModule\n\n\n\n\n\nUserModule\n\nUserModule\n\nAppModule -->\n\nUserModule->AppModule\n\n\n\n\n\nAppService\n\nAppService\n\nAppModule -->\n\nAppService->AppModule\n\n\n\n\n\nMailService\n\nMailService\n\nAppModule -->\n\nMailService->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AppService\n                        \n                        \n                            MailService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AppController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AuthModule\n                        \n                        \n                            BankModule\n                        \n                        \n                            DataBaseModule\n                        \n                        \n                            MailModule\n                        \n                        \n                            RedisModule\n                        \n                        \n                            UserModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { ConfigModule } from '@nestjs/config';\nimport * as Joi from '@hapi/joi';\nimport { BankModule } from '@bank/bank.module';\nimport { DataBaseModule } from '@db/db.module';\nimport { UserModule } from '@user/user.module';\nimport { AuthModule } from '@auth/auth.module';\nimport { MailModule } from '@mail/mail.module';\nimport { MailService } from '@mail/mail.service';\nimport { AppController } from '@root/app.controller';\nimport { AppService } from '@root/app.service';\nimport { RedisModule } from './redis/redis.module';\n\n@Module({\n  imports: [\n    // TypeOrmModule.forRoot({\n    //   type: 'mysql',\n    //   host: 'localhost',\n    //   port: 3307,\n    //   username: 'root',\n    //   password: 'pass_js',\n    //   database: 'db_js',\n    //   entities: [],\n    //   autoLoadEntities: true,\n    //   synchronize: true,\n    // }),\n    ConfigModule.forRoot({\n      validationSchema: Joi.object({\n        MYSQL_HOST: Joi.string().required(),\n        MYSQL_USER: Joi.string().required(),\n        MYSQL_ROOT_PASSWORD: Joi.string().required(),\n        MYSQL_DATABASE: Joi.string().required(),\n        MYSQL_PORT: Joi.number().required(),\n        MAIL_SERVICE: Joi.string().required(),\n        MAIL_USER: Joi.string().required(),\n        MAIL_PASSWORD: Joi.string().required(),\n        TOKEN_SECRET: Joi.string().required(),\n        TOKEN_TIME: Joi.string().required(),\n        GOOGLE_CLIENT_ID: Joi.string().required(),\n        GOOGLE_CLIENT_SECRET: Joi.string().required(),\n        GOOGLE_CALLBACK_URL: Joi.string().required(),\n        KAKAO_CLIENT_ID: Joi.string().required(),\n        KAKAO_CALLBACK_URL: Joi.string().required(),\n        REDIS_HOST: Joi.string().required(),\n        REDIS_PORT: Joi.number().required(),\n        // REDIS_USER: Joi.string().required(),\n        // REDIS_PASSWORD: Joi.string().required(),\n        REDIS_TTL: Joi.number().required(),\n      }),\n      envFilePath: '.env', // .env 파일의 경로를 명시적으로 추가\n      isGlobal: true, // 모든 모듈에서 ConfigService 사용 가능하게 함\n    }),\n    BankModule,\n    DataBaseModule,\n    UserModule,\n    AuthModule,\n    MailModule,\n    RedisModule,\n  ],\n  controllers: [AppController],\n  providers: [AppService, MailService],\n})\nexport class AppModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AppService.html":{"url":"injectables/AppService.html","title":"injectable - AppService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AppService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getHello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getHello\n                        \n                    \n                \n            \n            \n                \ngetHello()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app.service.ts:5\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\n\n@Injectable()\nexport class AppService {\n  getHello(): string {\n    return 'jangsen bank!';\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Auth.html":{"url":"classes/Auth.html","title":"class - Auth","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Auth\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/entities/auth.entity.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class Auth {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/AuthController.html":{"url":"controllers/AuthController.html","title":"controller - AuthController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AuthController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/auth.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                auth\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    Async\n                                authenticate\n                            \n                            \n                                    \n                                    Async\n                                emailSendOTP\n                            \n                            \n                                    \n                                    \n                                    Async\n                                googleLogin\n                            \n                            \n                                    \n                                    \n                                    Async\n                                googleLoginCallback\n                            \n                            \n                                    \n                                    \n                                    Async\n                                kakaoLogin\n                            \n                            \n                                    \n                                    \n                                    Async\n                                kakaoLoginCallback\n                            \n                            \n                                    \n                                    \n                                    \n                                    Async\n                                login\n                            \n                            \n                                    \n                                    \n                                    Async\n                                signup\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Async\n                        authenticate\n                        \n                    \n                \n            \n            \n                \n                        \n                    authenticate(req: RequestUserInterface)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseGuards(TokenGuard)@Get()\n                \n            \n\n                    \n                        \n                            Defined in src/auth/auth.controller.ts:49\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                req\n                                            \n                                                            RequestUserInterface\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Async\n                        emailSendOTP\n                        \n                    \n                \n            \n            \n                \n                        \n                    emailSendOTP(email: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('/email/send')\n                \n            \n\n                    \n                        \n                            Defined in src/auth/auth.controller.ts:89\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                email\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Async\n                        googleLogin\n                        \n                    \n                \n            \n            \n                \n                        \n                    googleLogin()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseGuards(GoogleAuthGuard)@Get('/google')\n                \n            \n\n                    \n                        \n                            Defined in src/auth/auth.controller.ts:56\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     unknown\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Async\n                        googleLoginCallback\n                        \n                    \n                \n            \n            \n                \n                        \n                    googleLoginCallback(req: RequestUserInterface)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseGuards(GoogleAuthGuard)@Get('/google/callback')\n                \n            \n\n                    \n                        \n                            Defined in src/auth/auth.controller.ts:63\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                req\n                                            \n                                                            RequestUserInterface\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Async\n                        kakaoLogin\n                        \n                    \n                \n            \n            \n                \n                        \n                    kakaoLogin()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseGuards(KakaoAuthGuard)@Get('/kakao')\n                \n            \n\n                    \n                        \n                            Defined in src/auth/auth.controller.ts:73\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     unknown\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Async\n                        kakaoLoginCallback\n                        \n                    \n                \n            \n            \n                \n                        \n                    kakaoLoginCallback(req: RequestUserInterface)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseGuards(KakaoAuthGuard)@Get('/kakao/callback')\n                \n            \n\n                    \n                        \n                            Defined in src/auth/auth.controller.ts:80\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                req\n                                            \n                                                            RequestUserInterface\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Async\n                        login\n                        \n                    \n                \n            \n            \n                \n                        \n                    login(req: RequestUserInterface)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiBody({type: LoginUserDto})@UseGuards(LocalAuthGuard)@Post('/login')\n                \n            \n\n                    \n                        \n                            Defined in src/auth/auth.controller.ts:39\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                req\n                                            \n                                                            RequestUserInterface\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Async\n                        signup\n                        \n                    \n                \n            \n            \n                \n                        \n                    signup(dto: CreateUserDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiBody({type: CreateUserDto})@Post('/signup')\n                \n            \n\n                    \n                        \n                            Defined in src/auth/auth.controller.ts:28\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                dto\n                                            \n                                                            CreateUserDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Body,\n  Controller,\n  Get,\n  HttpStatus,\n  Post,\n  Req,\n  UseGuards,\n} from '@nestjs/common';\nimport { ApiBody, ApiTags } from '@nestjs/swagger';\nimport { AuthService } from '@auth/auth.service';\nimport { CreateUserDto } from '@user/dto/create-user.dto';\nimport { LocalAuthGuard } from '@auth/guard/local-auth.guard';\nimport { RequestUserInterface } from '@auth/interface/requestUser.interface';\nimport { TokenGuard } from '@auth/guard/token.guard';\nimport { LoginUserDto } from '@user/dto/login-user.dto';\nimport { GoogleAuthGuard } from '@auth/guard/google-auth.guard';\nimport { KakaoAuthGuard } from '@auth/guard/kakao-auth.guard';\n\n@ApiTags('Auth')\n@Controller('auth')\nexport class AuthController {\n  constructor(private readonly authService: AuthService) {}\n\n  // 회원가입 API\n  @ApiBody({ type: CreateUserDto })\n  @Post('/signup')\n  async signup(@Body() dto: CreateUserDto) {\n    const user = await this.authService.signup(dto);\n    await this.authService.signupMail(user.email);\n\n    return user;\n  }\n\n  // 로그인 API\n  @ApiBody({ type: LoginUserDto })\n  @UseGuards(LocalAuthGuard)\n  @Post('/login')\n  async login(@Req() req: RequestUserInterface) {\n    const user = req.user;\n    const token = this.authService.generateToken(user.id);\n\n    return { user, token };\n  }\n\n  // 로그인 후, 토큰을 이용해 유저 정보 갖고오는 API\n  @UseGuards(TokenGuard)\n  @Get()\n  async authenticate(@Req() req: RequestUserInterface) {\n    return req.user;\n  }\n\n  // 구글 로그인 API\n  @UseGuards(GoogleAuthGuard)\n  @Get('/google')\n  async googleLogin() {\n    return HttpStatus.OK;\n  }\n\n  // 구글 로그인 API\n  @UseGuards(GoogleAuthGuard)\n  @Get('/google/callback')\n  async googleLoginCallback(@Req() req: RequestUserInterface) {\n    const { user } = req;\n    const token = this.authService.generateToken(user.id);\n\n    return { user, token };\n  }\n\n  // 카카오 로그인 API\n  @UseGuards(KakaoAuthGuard)\n  @Get('/kakao')\n  async kakaoLogin() {\n    return HttpStatus.OK;\n  }\n\n  // 카카오 로그인 API\n  @UseGuards(KakaoAuthGuard)\n  @Get('/kakao/callback')\n  async kakaoLoginCallback(@Req() req: RequestUserInterface) {\n    const user = req.user;\n    const token = this.authService.generateToken(user.id);\n\n    return { user, token };\n  }\n\n  // 이메일 인증번호 전송 API\n  @Post('/email/send')\n  async emailSendOTP(@Body('email') email: string) {\n    return this.authService.sendEmailOTP(email);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AuthModule.html":{"url":"modules/AuthModule.html","title":"module - AuthModule","body":"\n                   \n\n\n\n\n    Modules\n    AuthModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_imports\n\n\n\ncluster_AuthModule_providers\n\n\n\n\nMailModule\n\nMailModule\n\n\n\nAuthModule\n\nAuthModule\n\nAuthModule -->\n\nMailModule->AuthModule\n\n\n\n\n\nUserModule\n\nUserModule\n\nAuthModule -->\n\nUserModule->AuthModule\n\n\n\n\n\nAuthService\n\nAuthService\n\nAuthModule -->\n\nAuthService->AuthModule\n\n\n\n\n\nGoogleAuthStrategy\n\nGoogleAuthStrategy\n\nAuthModule -->\n\nGoogleAuthStrategy->AuthModule\n\n\n\n\n\nKakaoAuthStrategy\n\nKakaoAuthStrategy\n\nAuthModule -->\n\nKakaoAuthStrategy->AuthModule\n\n\n\n\n\nLocalAuthStrategy\n\nLocalAuthStrategy\n\nAuthModule -->\n\nLocalAuthStrategy->AuthModule\n\n\n\n\n\nTokenStrategy\n\nTokenStrategy\n\nAuthModule -->\n\nTokenStrategy->AuthModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/auth/auth.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AuthService\n                        \n                        \n                            GoogleAuthStrategy\n                        \n                        \n                            KakaoAuthStrategy\n                        \n                        \n                            LocalAuthStrategy\n                        \n                        \n                            TokenStrategy\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AuthController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            MailModule\n                        \n                        \n                            UserModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { ConfigModule } from '@nestjs/config';\nimport { JwtModule } from '@nestjs/jwt';\nimport { UserModule } from '@user/user.module';\nimport { MailModule } from '@mail/mail.module';\nimport { AuthController } from '@auth/auth.controller';\nimport { AuthService } from '@auth/auth.service';\nimport { LocalAuthStrategy } from '@auth/strategy/local-auth.strategy';\nimport { TokenStrategy } from '@auth/strategy/token.strategy';\nimport { GoogleAuthStrategy } from '@auth/strategy/google-auth.strategy';\nimport { KakaoAuthStrategy } from '@auth/strategy/kakao-auth.strategy';\n\n@Module({\n  imports: [ConfigModule, UserModule, MailModule, JwtModule.register({})],\n  controllers: [AuthController],\n  providers: [\n    AuthService,\n    LocalAuthStrategy,\n    TokenStrategy,\n    GoogleAuthStrategy,\n    KakaoAuthStrategy,\n  ],\n})\nexport class AuthModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthService.html":{"url":"injectables/AuthService.html","title":"injectable - AuthService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AuthService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/auth.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                generateOTP\n                            \n                            \n                                    Public\n                                generateToken\n                            \n                            \n                                    Async\n                                login\n                            \n                            \n                                    Async\n                                sendEmailOTP\n                            \n                            \n                                    Async\n                                signup\n                            \n                            \n                                    Async\n                                signupMail\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(configService: ConfigService, userService: UserService, mailService: MailService, jwtService: JwtService, cache: Cache)\n                    \n                \n                        \n                            \n                                Defined in src/auth/auth.service.ts:15\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        configService\n                                                  \n                                                        \n                                                                    ConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                        UserService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        mailService\n                                                  \n                                                        \n                                                                        MailService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        jwtService\n                                                  \n                                                        \n                                                                    JwtService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        cache\n                                                  \n                                                        \n                                                                    Cache\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        generateOTP\n                        \n                    \n                \n            \n            \n                \ngenerateOTP()\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/auth.service.ts:79\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        generateToken\n                        \n                    \n                \n            \n            \n                \n                        \n                    generateToken(userId: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/auth.service.ts:55\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                userId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        login\n                        \n                    \n                \n            \n            \n                \n                        \n                    login(dto: LoginUserDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/auth.service.ts:30\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                dto\n                                            \n                                                            LoginUserDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        sendEmailOTP\n                        \n                    \n                \n            \n            \n                \n                        \n                    sendEmailOTP(email: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/auth.service.ts:66\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                email\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        signup\n                        \n                    \n                \n            \n            \n                \n                        \n                    signup(dto: CreateUserDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/auth.service.ts:25\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                dto\n                                            \n                                                            CreateUserDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        signupMail\n                        \n                    \n                \n            \n            \n                \n                        \n                    signupMail(email: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/auth.service.ts:46\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                email\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { HttpException, HttpStatus, Inject, Injectable } from '@nestjs/common';\nimport * as bcrypt from 'bcrypt';\nimport { ConfigService } from '@nestjs/config';\nimport { JwtService } from '@nestjs/jwt';\nimport { UserService } from '@user/user.service';\nimport { MailService } from '@mail/mail.service';\nimport { CreateUserDto } from '@user/dto/create-user.dto';\nimport { LoginUserDto } from '@user/dto/login-user.dto';\nimport { TokenInterface } from '@auth/interface/token.interface';\nimport { Provider } from '@user/entities/provider.enum';\nimport { CACHE_MANAGER } from '@nestjs/common/cache';\nimport { Cache } from 'cache-manager';\n\n@Injectable()\nexport class AuthService {\n  constructor(\n    private readonly configService: ConfigService,\n    private readonly userService: UserService,\n    private readonly mailService: MailService,\n    private readonly jwtService: JwtService,\n    @Inject(CACHE_MANAGER) private cache: Cache,\n  ) {}\n\n  // 회원가입 로직\n  async signup(dto: CreateUserDto) {\n    return await this.userService.create({ ...dto, provider: Provider.LOCAL });\n  }\n\n  // 로그인 로직\n  async login(dto: LoginUserDto) {\n    // mail 유무 -> 비밀번호 체크 -> return\n    const user = await this.userService.getUserBy('email', dto.email);\n    const pass = await bcrypt.compare(dto.password, user.password);\n\n    if (!pass) {\n      throw new HttpException(\n        '패스워드가 일치하지 않습니다.',\n        HttpStatus.BAD_REQUEST,\n      );\n    }\n\n    return user;\n  }\n\n  // 회원가입 시 메일 전송 로직\n  async signupMail(email: string) {\n    await this.mailService.sendMail({\n      to: email,\n      subject: '안녕하세요. 장센은행에 가입해주셔서 감사합니다.',\n      html: '회원가입 감사드립니다.',\n    });\n  }\n\n  // 토큰 발행 로직\n  public generateToken(userId: string) {\n    const load: TokenInterface = { userId };\n    const token = this.jwtService.sign(load, {\n      secret: this.configService.get('TOKEN_SECRET'),\n      expiresIn: this.configService.get('TOKEN_TIME'),\n    });\n\n    return token;\n  }\n\n  // 이메일 OTP 로직\n  async sendEmailOTP(email: string) {\n    const num = this.generateOTP();\n    // 캐시에 저장\n    await this.cache.set(email, num);\n\n    return this.mailService.sendMail({\n      to: email,\n      subject: '회원님이 요청하신 인증번호 입니다.',\n      text: `인증 번호는 ${num} 입니다.`,\n    });\n  }\n\n  // 이메일 인증 랜덤 번호 로직\n  generateOTP() {\n    let otp = '';\n\n    for (let i = 1; i \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/Bank.html":{"url":"entities/Bank.html","title":"entity - Bank","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  Bank\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/bank/entities/bank.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Public\n                                amount\n                            \n                            \n                                    \n                                    Public\n                                bankName\n                            \n                            \n                                    \n                                    Public\n                                user\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                        amount\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/bank/entities/bank.entity.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                        bankName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/bank/entities/bank.entity.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                        user\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/bank/entities/bank.entity.ts:10\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import { Column, Entity } from 'typeorm';\nimport { BaseEntity } from '@bank/entities/base.entity';\n\n@Entity()\nexport class Bank extends BaseEntity {\n  @Column()\n  public bankName: string;\n\n  @Column()\n  public user: string;\n\n  @Column()\n  public amount: number;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/BankController.html":{"url":"controllers/BankController.html","title":"controller - BankController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  BankController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/bank/bank.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                bank\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    Async\n                                create\n                            \n                            \n                                    \n                                    Async\n                                delete\n                            \n                            \n                                    \n                                    Async\n                                getAll\n                            \n                            \n                                    \n                                    Async\n                                getById\n                            \n                            \n                                    \n                                    \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(dto: CreateBankDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiBody({type: CreateBankDto})@Post('/create')\n                \n            \n\n                    \n                        \n                            Defined in src/bank/bank.controller.ts:35\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                dto\n                                            \n                                                            CreateBankDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Async\n                        delete\n                        \n                    \n                \n            \n            \n                \n                        \n                    delete(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete('/:id')\n                \n            \n\n                    \n                        \n                            Defined in src/bank/bank.controller.ts:41\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Async\n                        getAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    getAll()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('/all')\n                \n            \n\n                    \n                        \n                            Defined in src/bank/bank.controller.ts:22\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     unknown\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Async\n                        getById\n                        \n                    \n                \n            \n            \n                \n                        \n                    getById(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('/:id')\n                \n            \n\n                    \n                        \n                            Defined in src/bank/bank.controller.ts:28\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(id: string, dto: UpdateBankDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiBody({type: CreateBankDto})@Put('/:id')\n                \n            \n\n                    \n                        \n                            Defined in src/bank/bank.controller.ts:48\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                dto\n                                            \n                                                            UpdateBankDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Body,\n  Controller,\n  Delete,\n  Get,\n  Param,\n  Post,\n  Put,\n} from '@nestjs/common';\nimport { ApiBody, ApiTags } from '@nestjs/swagger';\nimport { BankService } from '@bank/bank.service';\nimport { CreateBankDto } from '@bank/dto/create-bank.dto';\nimport { UpdateBankDto } from '@bank/dto/update-bank.dto';\n\n@ApiTags('Bank')\n@Controller('bank')\nexport class BankController {\n  constructor(private readonly bankService: BankService) {}\n\n  // 전체 조회 api\n  @Get('/all')\n  async getAll() {\n    return await this.bankService.getAll();\n  }\n\n  // 상세 조회 api\n  @Get('/:id')\n  async getById(@Param('id') id: string) {\n    return await this.bankService.getBankById(id);\n  }\n\n  // 계좌 등록 api\n  @ApiBody({ type: CreateBankDto })\n  @Post('/create')\n  async create(@Body() dto: CreateBankDto) {\n    return await this.bankService.create(dto);\n  }\n\n  // 계좌 삭제 API\n  @Delete('/:id')\n  async delete(@Param('id') id: string) {\n    return await this.bankService.delete(id);\n  }\n\n  // 계좌 수정 API\n  @ApiBody({ type: CreateBankDto })\n  @Put('/:id')\n  async update(@Param('id') id: string, @Body() dto: UpdateBankDto) {\n    return await this.bankService.update(id, dto);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/BankModule.html":{"url":"modules/BankModule.html","title":"module - BankModule","body":"\n                   \n\n\n\n\n    Modules\n    BankModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_BankModule\n\n\n\ncluster_BankModule_providers\n\n\n\n\nBankService\n\nBankService\n\n\n\nBankModule\n\nBankModule\n\nBankModule -->\n\nBankService->BankModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/bank/bank.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            BankService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            BankController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport { Bank } from '@bank/entities/bank.entity';\nimport { BankController } from '@bank/bank.controller';\nimport { BankService } from '@bank/bank.service';\n\n@Module({\n  imports: [TypeOrmModule.forFeature([Bank])],\n  controllers: [BankController],\n  providers: [BankService],\n})\nexport class BankModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/BankService.html":{"url":"injectables/BankService.html","title":"injectable - BankService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  BankService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/bank/bank.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                delete\n                            \n                            \n                                    Async\n                                getAll\n                            \n                            \n                                    Async\n                                getBankById\n                            \n                            \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(repository: Repository)\n                    \n                \n                        \n                            \n                                Defined in src/bank/bank.service.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        repository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(dto: CreateBankDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/bank/bank.service.ts:29\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                dto\n                                            \n                                                            CreateBankDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        delete\n                        \n                    \n                \n            \n            \n                \n                        \n                    delete(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/bank/bank.service.ts:36\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    getAll()\n                \n            \n\n\n                    \n                        \n                            Defined in src/bank/bank.service.ts:15\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     unknown\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getBankById\n                        \n                    \n                \n            \n            \n                \n                        \n                    getBankById(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/bank/bank.service.ts:19\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(id: string, dto: UpdateBankDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/bank/bank.service.ts:46\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                dto\n                                            \n                                                            UpdateBankDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, NotFoundException } from '@nestjs/common';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { Repository } from 'typeorm';\nimport { Bank } from '@bank/entities/bank.entity';\nimport { CreateBankDto } from '@bank/dto/create-bank.dto';\nimport { UpdateBankDto } from '@bank/dto/update-bank.dto';\n\n@Injectable()\nexport class BankService {\n  constructor(\n    @InjectRepository(Bank)\n    private repository: Repository,\n  ) {}\n\n  async getAll() {\n    return await this.repository.find();\n  }\n\n  async getBankById(id: string) {\n    const bank = await this.repository.findOneBy({ id: id });\n\n    if (!bank) {\n      throw new NotFoundException('찾을 수 없는 계좌입니다.');\n    }\n\n    return bank;\n  }\n\n  async create(dto: CreateBankDto) {\n    const bank = await this.repository.create(dto);\n    await this.repository.save(bank);\n\n    return bank;\n  }\n\n  async delete(id: string) {\n    const bank = await this.repository.delete({ id });\n\n    if (!bank) {\n      throw new NotFoundException('찾을 수 없는 계좌입니다.');\n    }\n\n    return bank;\n  }\n\n  async update(id: string, dto: UpdateBankDto) {\n    const bank = await this.repository.update(id, dto);\n\n    if (!bank) {\n      throw new NotFoundException('찾을 수 없는 계좌입니다.');\n    }\n\n    return bank;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/BaseEntity.html":{"url":"classes/BaseEntity.html","title":"class - BaseEntity","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  BaseEntity\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/bank/entities/base.entity.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Public\n                                createAt\n                            \n                            \n                                    \n                                    Public\n                                deleteAt\n                            \n                            \n                                    \n                                    Public\n                                id\n                            \n                            \n                                    \n                                    Public\n                                updateAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                        createAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @CreateDateColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/bank/entities/base.entity.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                        deleteAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @DeleteDateColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/bank/entities/base.entity.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryGeneratedColumn('uuid')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/bank/entities/base.entity.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                        updateAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @UpdateDateColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/bank/entities/base.entity.ts:16\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {\n  CreateDateColumn,\n  DeleteDateColumn,\n  PrimaryGeneratedColumn,\n  UpdateDateColumn,\n} from 'typeorm';\n\nexport abstract class BaseEntity {\n  @PrimaryGeneratedColumn('uuid')\n  public id: string;\n\n  @CreateDateColumn()\n  public createAt: Date;\n\n  @UpdateDateColumn()\n  public updateAt: Date;\n\n  @DeleteDateColumn()\n  public deleteAt: Date;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateAuthDto.html":{"url":"classes/CreateAuthDto.html","title":"class - CreateAuthDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateAuthDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/dto/create-auth.dto.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class CreateAuthDto {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateBankDto.html":{"url":"classes/CreateBankDto.html","title":"class - CreateBankDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateBankDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/bank/dto/create-bank.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                amount\n                            \n                            \n                                    \n                                    \n                                    \n                                bankName\n                            \n                            \n                                    \n                                    \n                                    \n                                user\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        amount\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNumber()@IsNotEmpty()@ApiProperty({example: 50000})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/bank/dto/create-bank.dto.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        bankName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsNotEmpty()@ApiProperty({example: '신한'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/bank/dto/create-bank.dto.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        user\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsNotEmpty()@ApiProperty({example: '홍길동'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/bank/dto/create-bank.dto.ts:13\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { IsNotEmpty, IsNumber, IsString } from 'class-validator';\n\nexport class CreateBankDto {\n  @IsString()\n  @IsNotEmpty()\n  @ApiProperty({ example: '신한' })\n  bankName: string;\n\n  @IsString()\n  @IsNotEmpty()\n  @ApiProperty({ example: '홍길동' })\n  user: string;\n\n  @IsNumber()\n  @IsNotEmpty()\n  @ApiProperty({\n    example: 50000,\n  })\n  amount: number;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateUserDto.html":{"url":"classes/CreateUserDto.html","title":"class - CreateUserDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateUserDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/user/dto/create-user.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                email\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    Optional\n                                password\n                            \n                            \n                                    \n                                    \n                                    Optional\n                                phone\n                            \n                            \n                                    \n                                    Optional\n                                profileImg\n                            \n                            \n                                    \n                                    Optional\n                                provider\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                username\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsEmail()@ApiProperty({example: 'example@exam.com'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/dto/create-user.dto.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            Optional\n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@MinLength(7)@Matches(/^(?=.*[A-Za-z])(?=.*\\d)(?=.*[$@$!%*#?&])[A-Za-z\\d$@$!%*#?&]{8,}$/)@ApiProperty({example: '123456a!'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/dto/create-user.dto.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        phone\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNumber()@ApiProperty({example: 1012345678})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/dto/create-user.dto.ts:31\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        profileImg\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/dto/create-user.dto.ts:37\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        provider\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Provider\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/dto/create-user.dto.ts:34\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                        username\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsNotEmpty()@MinLength(2)@ApiProperty({example: '홍길동'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/dto/create-user.dto.ts:17\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport {\n  IsEmail,\n  IsNotEmpty,\n  IsNumber,\n  IsString,\n  Matches,\n  MinLength,\n} from 'class-validator';\nimport { Provider } from '@user/entities/provider.enum';\n\nexport class CreateUserDto {\n  @IsString()\n  @IsNotEmpty()\n  @MinLength(2)\n  @ApiProperty({ example: '홍길동' })\n  username: string;\n\n  @IsString()\n  @MinLength(7)\n  @Matches(/^(?=.*[A-Za-z])(?=.*\\d)(?=.*[$@$!%*#?&])[A-Za-z\\d$@$!%*#?&]{8,}$/)\n  @ApiProperty({ example: '123456a!' })\n  password?: string;\n\n  @IsEmail()\n  @ApiProperty({ example: 'example@exam.com' })\n  email: string;\n\n  @IsNumber()\n  @ApiProperty({ example: 1012345678 })\n  phone?: number;\n\n  @IsString()\n  provider?: Provider;\n\n  @IsString()\n  profileImg?: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/DataBaseModule.html":{"url":"modules/DataBaseModule.html","title":"module - DataBaseModule","body":"\n                   \n\n\n\n\n    Modules\n    DataBaseModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/db/db.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { TypeOrmModule } from '@nestjs/typeorm';\nimport { Module } from '@nestjs/common';\nimport { ConfigModule, ConfigService } from '@nestjs/config';\n\n@Module({\n  imports: [\n    TypeOrmModule.forRootAsync({\n      // type: 'mysql',\n      // host: 'localhost',\n      // port: 3307,\n      // username: 'root',\n      // password: 'pass_js',\n      // database: 'db_js',\n      // entities: [],\n      // autoLoadEntities: true,\n      // synchronize: true,\n      imports: [ConfigModule],\n      inject: [ConfigService],\n      useFactory: (c: ConfigService) => ({\n        type: 'mysql',\n        host: c.get('MYSQL_HOST'),\n        port: c.get('MYSQL_PORT'),\n        username: c.get('MYSQL_USER'),\n        password: c.get('MYSQL_ROOT_PASSWORD'),\n        database: c.get('MYSQL_DATABASE'),\n        entities: [__dirname + '/../**/*.entity{.ts,.js}'],\n        autoLoadEntities: true,\n        synchronize: true,\n      }),\n    }),\n  ],\n})\nexport class DataBaseModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/GoogleAuthGuard.html":{"url":"injectables/GoogleAuthGuard.html","title":"injectable - GoogleAuthGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  GoogleAuthGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/guard/google-auth.guard.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            AuthGuard(Provider.GOOGLE)\n            \n\n\n\n\n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { AuthGuard } from '@nestjs/passport';\nimport { Provider } from '@user/entities/provider.enum';\n\n@Injectable()\nexport class GoogleAuthGuard extends AuthGuard(Provider.GOOGLE) {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/GoogleAuthStrategy.html":{"url":"injectables/GoogleAuthStrategy.html","title":"injectable - GoogleAuthStrategy","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  GoogleAuthStrategy\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/strategy/google-auth.strategy.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            PassportStrategy(\n  Strategy,\n  Provider.GOOGLE,\n)\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                validate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(configService: ConfigService, userService: UserService)\n                    \n                \n                        \n                            \n                                Defined in src/auth/strategy/google-auth.strategy.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        configService\n                                                  \n                                                        \n                                                                    ConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                        UserService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        validate\n                        \n                    \n                \n            \n            \n                \n                        \n                    validate(accessToken: string, refreshToken: string, profile: any, done: VerifyCallback)\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/strategy/google-auth.strategy.ts:27\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                accessToken\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                refreshToken\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                profile\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                done\n                                            \n                                                        VerifyCallback\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { HttpException, HttpStatus, Injectable } from '@nestjs/common';\nimport { PassportStrategy } from '@nestjs/passport';\nimport { Strategy, VerifyCallback } from 'passport-google-oauth2';\nimport { ConfigService } from '@nestjs/config';\nimport { Provider } from '@user/entities/provider.enum';\nimport { UserService } from '@user/user.service';\n\n@Injectable()\nexport class GoogleAuthStrategy extends PassportStrategy(\n  Strategy,\n  Provider.GOOGLE,\n) {\n  constructor(\n    private readonly configService: ConfigService,\n    private readonly userService: UserService,\n  ) {\n    super({\n      clientID: configService.get('GOOGLE_CLIENT_ID'),\n      clientSecret: configService.get('GOOGLE_CLIENT_SECRET'),\n      callbackURL: configService.get('GOOGLE_CALLBACK_URL'),\n      scope: ['profile', 'email'],\n      // passReqToCallback: true,\n    });\n  }\n\n  // 로직\n  async validate(\n    accessToken: string,\n    refreshToken: string,\n    profile: any,\n    done: VerifyCallback,\n  ) {\n    const { provider, displayName, email, picture } = profile;\n\n    try {\n      // 이메일이 이미 사용중인 이메일인지 먼저 체크\n      const user = await this.userService.getUserBy('email', email);\n\n      if (user.provider !== provider) {\n        // 이미 계정이 다른 곳에서 생성된 상태일 때 에러를 던짐\n        throw new HttpException(\n          `You are already subscribed to ${user.provider}`, // 이미 생성된 계정의 연동 상태를 표시\n          HttpStatus.CONFLICT, // HTTP 409 에러\n        );\n      }\n\n      console.log('----------------------------');\n      done(null, user);\n    } catch (e) {\n      // 회원가입 로직\n      if (e.status === 404) {\n        const user = await this.userService.create({\n          email,\n          username: displayName,\n          profileImg: picture,\n          provider,\n        });\n\n        console.log('+++++++++++++++++++++');\n        done(null, user);\n      }\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/KakaoAuthGuard.html":{"url":"injectables/KakaoAuthGuard.html","title":"injectable - KakaoAuthGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  KakaoAuthGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/guard/kakao-auth.guard.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            AuthGuard(Provider.KAKAO)\n            \n\n\n\n\n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { AuthGuard } from '@nestjs/passport';\nimport { Provider } from '@user/entities/provider.enum';\n\n@Injectable()\nexport class KakaoAuthGuard extends AuthGuard(Provider.KAKAO) {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/KakaoAuthStrategy.html":{"url":"injectables/KakaoAuthStrategy.html","title":"injectable - KakaoAuthStrategy","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  KakaoAuthStrategy\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/strategy/kakao-auth.strategy.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            PassportStrategy(\n  Strategy,\n  Provider.KAKAO,\n)\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                validate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(configService: ConfigService, userService: UserService)\n                    \n                \n                        \n                            \n                                Defined in src/auth/strategy/kakao-auth.strategy.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        configService\n                                                  \n                                                        \n                                                                    ConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                        UserService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        validate\n                        \n                    \n                \n            \n            \n                \n                        \n                    validate(accessToken: string, refreshToken: string, profile: any, done: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/strategy/kakao-auth.strategy.ts:23\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                accessToken\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                refreshToken\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                profile\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                done\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { HttpException, HttpStatus, Injectable } from '@nestjs/common';\nimport { PassportStrategy } from '@nestjs/passport';\nimport { Strategy } from 'passport-kakao';\nimport { Provider } from '@user/entities/provider.enum';\nimport { ConfigService } from '@nestjs/config';\nimport { UserService } from '@user/user.service';\n\n@Injectable()\nexport class KakaoAuthStrategy extends PassportStrategy(\n  Strategy,\n  Provider.KAKAO,\n) {\n  constructor(\n    private readonly configService: ConfigService,\n    private readonly userService: UserService,\n  ) {\n    super({\n      clientID: configService.get('KAKAO_CLIENT_ID'),\n      callbackURL: configService.get('KAKAO_CALLBACK_URL'),\n    });\n  }\n\n  async validate(\n    accessToken: string,\n    refreshToken: string,\n    profile: any,\n    done: any,\n  ) {\n    const { provider, username } = profile;\n    const { profile_image } = profile._json.properties;\n    const { email } = profile._json.kakao_account;\n\n    try {\n      // 이미 사용중인 email인지 확인\n      const user = await this.userService.getUserBy('email', email);\n\n      // DB에 저장되어 있는 email의 로그인 경로\n      if (user.provider !== provider) {\n        throw new HttpException(\n          `You are already subscribed to ${user.provider}`,\n          HttpStatus.CONFLICT,\n        );\n      }\n\n      console.log('-------------------');\n      done(null, user);\n    } catch (e) {\n      // email 확인 후 없을 경우 회원가입 진행\n      const user = await this.userService.create({\n        username,\n        email,\n        profileImg: profile_image,\n        provider,\n      });\n\n      console.log('====================');\n      done(null, user);\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/LocalAuthGuard.html":{"url":"injectables/LocalAuthGuard.html","title":"injectable - LocalAuthGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  LocalAuthGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/guard/local-auth.guard.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            AuthGuard(Provider.LOCAL)\n            \n\n\n\n\n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { AuthGuard } from '@nestjs/passport';\nimport { Provider } from '@user/entities/provider.enum';\n\n@Injectable()\nexport class LocalAuthGuard extends AuthGuard(Provider.LOCAL) {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/LocalAuthStrategy.html":{"url":"injectables/LocalAuthStrategy.html","title":"injectable - LocalAuthStrategy","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  LocalAuthStrategy\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/strategy/local-auth.strategy.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        PassportStrategy(Strategy)\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                validate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(service: AuthService)\n                    \n                \n                        \n                            \n                                Defined in src/auth/strategy/local-auth.strategy.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        service\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        validate\n                        \n                    \n                \n            \n            \n                \n                        \n                    validate(email: string, password: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/strategy/local-auth.strategy.ts:15\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                email\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                password\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { PassportStrategy } from '@nestjs/passport';\nimport { Strategy } from 'passport-local';\nimport { AuthService } from '@auth/auth.service';\n\n@Injectable()\nexport class LocalAuthStrategy extends PassportStrategy(Strategy) {\n  constructor(private readonly service: AuthService) {\n    super({\n      usernameField: 'email',\n    });\n  }\n\n  // 검증 함수\n  async validate(email: string, password: string) {\n    return await this.service.login({ email, password });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/LoginUserDto.html":{"url":"classes/LoginUserDto.html","title":"class - LoginUserDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  LoginUserDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/user/dto/login-user.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                email\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    Optional\n                                password\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsEmail()@ApiProperty({example: 'example@exam.com'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/dto/login-user.dto.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            Optional\n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@MinLength(7)@Matches(/^(?=.*[A-Za-z])(?=.*\\d)(?=.*[$@$!%*#?&])[A-Za-z\\d$@$!%*#?&]{8,}$/)@ApiProperty({example: '123456a!'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/dto/login-user.dto.ts:13\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { IsEmail, IsString, Matches, MinLength } from 'class-validator';\n\nexport class LoginUserDto {\n  @IsEmail()\n  @ApiProperty({ example: 'example@exam.com' })\n  email: string;\n\n  @IsString()\n  @MinLength(7)\n  @Matches(/^(?=.*[A-Za-z])(?=.*\\d)(?=.*[$@$!%*#?&])[A-Za-z\\d$@$!%*#?&]{8,}$/)\n  @ApiProperty({ example: '123456a!' })\n  password?: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/MailModule.html":{"url":"modules/MailModule.html","title":"module - MailModule","body":"\n                   \n\n\n\n\n    Modules\n    MailModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_MailModule\n\n\n\ncluster_MailModule_exports\n\n\n\ncluster_MailModule_providers\n\n\n\n\nMailService \n\nMailService \n\n\n\nMailModule\n\nMailModule\n\nMailService  -->\n\nMailModule->MailService \n\n\n\n\n\nMailService\n\nMailService\n\nMailModule -->\n\nMailService->MailModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/mail/mail.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            MailService\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            MailService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { ConfigModule } from '@nestjs/config';\nimport { MailService } from '@mail/mail.service';\n\n@Module({\n  imports: [ConfigModule],\n  providers: [MailService],\n  exports: [MailService],\n})\nexport class MailModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/MailService.html":{"url":"injectables/MailService.html","title":"injectable - MailService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  MailService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/mail/mail.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                mail\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                sendMail\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(configService: ConfigService)\n                    \n                \n                        \n                            \n                                Defined in src/mail/mail.service.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        configService\n                                                  \n                                                        \n                                                                    ConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        sendMail\n                        \n                    \n                \n            \n            \n                \nsendMail(options: Mail.Options)\n                \n            \n\n\n                    \n                        \n                            Defined in src/mail/mail.service.ts:21\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                options\n                                            \n                                                        Mail.Options\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        mail\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Mail\n\n                    \n                \n                    \n                        \n                                Defined in src/mail/mail.service.ts:8\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport Mail from 'nodemailer/lib/mailer';\nimport { ConfigService } from '@nestjs/config';\nimport { createTransport } from 'nodemailer';\n\n@Injectable()\nexport class MailService {\n  private mail: Mail;\n\n  constructor(private readonly configService: ConfigService) {\n    this.mail = createTransport({\n      service: configService.get('MAIL_SERVICE'),\n      auth: {\n        user: configService.get('MAIL_USER'),\n        pass: configService.get('MAIL_PASSWORD'),\n      },\n    });\n  }\n\n  // 메일 전송하는 로직\n  sendMail(options: Mail.Options) {\n    return this.mail.sendMail(options);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/RedisModule.html":{"url":"modules/RedisModule.html","title":"module - RedisModule","body":"\n                   \n\n\n\n\n    Modules\n    RedisModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/redis/redis.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { CacheModule } from '@nestjs/common/cache';\nimport { ConfigModule, ConfigService } from '@nestjs/config';\nimport * as redisStore from 'cache-manager-redis-store';\n\n@Module({\n  imports: [\n    CacheModule.registerAsync({\n      imports: [ConfigModule],\n      inject: [ConfigService],\n      useFactory: async (configService: ConfigService) => {\n        return {\n          store: redisStore,\n          host: configService.get('REDIS_HOST'),\n          port: configService.get('REDIS_PORT'),\n          // username: configService.get('REDIS_USER'),\n          // password: configService.get('REDIS_PASSWORD'),\n          ttl: configService.get('REDIS_TTL'),\n        };\n      },\n      isGlobal: true,\n    }),\n  ],\n})\nexport class RedisModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/RequestUserInterface.html":{"url":"interfaces/RequestUserInterface.html","title":"interface - RequestUserInterface","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  RequestUserInterface\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/interface/requestUser.interface.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        Request\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            user\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        user\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        user:         User\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         User\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { User } from '@user/entities/user.entity';\n\nexport interface RequestUserInterface extends Request {\n  user: User;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/TokenGuard.html":{"url":"injectables/TokenGuard.html","title":"injectable - TokenGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  TokenGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/guard/token.guard.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            AuthGuard('jwt')\n            \n\n\n\n\n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { AuthGuard } from '@nestjs/passport';\n\n@Injectable()\nexport class TokenGuard extends AuthGuard('jwt') {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/TokenInterface.html":{"url":"interfaces/TokenInterface.html","title":"interface - TokenInterface","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  TokenInterface\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/interface/token.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            userId\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        userId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        userId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface TokenInterface {\n  userId: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/TokenStrategy.html":{"url":"injectables/TokenStrategy.html","title":"injectable - TokenStrategy","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  TokenStrategy\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/strategy/token.strategy.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        PassportStrategy(Strategy)\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                validate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(configService: ConfigService, userService: UserService)\n                    \n                \n                        \n                            \n                                Defined in src/auth/strategy/token.strategy.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        configService\n                                                  \n                                                        \n                                                                    ConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                        UserService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        validate\n                        \n                    \n                \n            \n            \n                \n                        \n                    validate(load: TokenInterface)\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/strategy/token.strategy.ts:21\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                load\n                                            \n                                                            TokenInterface\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { PassportStrategy } from '@nestjs/passport';\nimport { ExtractJwt, Strategy } from 'passport-jwt';\nimport { ConfigService } from '@nestjs/config';\nimport { UserService } from '@user/user.service';\nimport { TokenInterface } from '@auth/interface/token.interface';\n\n@Injectable()\nexport class TokenStrategy extends PassportStrategy(Strategy) {\n  constructor(\n    private readonly configService: ConfigService,\n    private readonly userService: UserService,\n  ) {\n    super({\n      jwtFromRequest: ExtractJwt.fromAuthHeaderAsBearerToken(),\n      secretOrKey: configService.get('TOKEN_SECRET'),\n    });\n  }\n\n  // 검증 함수\n  async validate(load: TokenInterface) {\n    return await this.userService.getUserBy('id', load.userId);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateAuthDto.html":{"url":"classes/UpdateAuthDto.html","title":"class - UpdateAuthDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateAuthDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/dto/update-auth.dto.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        PartialType(CreateAuthDto)\n            \n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PartialType } from '@nestjs/mapped-types';\nimport { CreateAuthDto } from './create-auth.dto';\n\nexport class UpdateAuthDto extends PartialType(CreateAuthDto) {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateBankDto.html":{"url":"classes/UpdateBankDto.html","title":"class - UpdateBankDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateBankDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/bank/dto/update-bank.dto.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            PartialType(CreateBankDto)\n            \n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PartialType } from '@nestjs/mapped-types';\nimport { CreateBankDto } from './create-bank.dto';\n\nexport class UpdateBankDto extends PartialType(CreateBankDto) {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateUserDto.html":{"url":"classes/UpdateUserDto.html","title":"class - UpdateUserDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateUserDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/user/dto/update-user.dto.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            PartialType(CreateUserDto)\n            \n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PartialType } from '@nestjs/mapped-types';\nimport { CreateUserDto } from '@user/dto/create-user.dto';\n\nexport class UpdateUserDto extends PartialType(CreateUserDto) {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/User.html":{"url":"entities/User.html","title":"entity - User","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  User\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/user/entities/user.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Public\n                                email\n                            \n                            \n                                    \n                                    \n                                    Public\n                                    Optional\n                                password\n                            \n                            \n                                    \n                                    Public\n                                    Optional\n                                phone\n                            \n                            \n                                    \n                                    Public\n                                    Optional\n                                profileImg\n                            \n                            \n                                    \n                                    Public\n                                provider\n                            \n                            \n                                    \n                                    Public\n                                username\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({unique: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/entities/user.entity.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Public\n                            Optional\n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({nullable: true})@Exclude()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/entities/user.entity.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                            Optional\n                        phone\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/entities/user.entity.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                            Optional\n                        profileImg\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/entities/user.entity.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                        provider\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Provider\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'enum', enum: Provider, default: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/entities/user.entity.ts:31\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                        username\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/entities/user.entity.ts:11\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import { BeforeInsert, Column, Entity } from 'typeorm';\nimport { Exclude } from 'class-transformer';\nimport { BaseEntity } from '@bank/entities/base.entity';\nimport * as bcrypt from 'bcrypt';\nimport * as gravatar from 'gravatar';\nimport { Provider } from '@user/entities/provider.enum';\n\n@Entity()\nexport class User extends BaseEntity {\n  @Column()\n  public username: string;\n\n  @Column({ nullable: true })\n  @Exclude()\n  public password?: string;\n\n  @Column({ unique: true })\n  public email: string;\n\n  @Column({ nullable: true })\n  public phone?: number;\n\n  @Column({ nullable: true })\n  public profileImg?: string;\n\n  @Column({\n    type: 'enum',\n    enum: Provider,\n    default: Provider.LOCAL,\n  })\n  public provider: Provider;\n\n  @BeforeInsert()\n  async beforeFunction() {\n    try {\n      if (this.provider !== Provider.LOCAL) {\n        return;\n      } else {\n        // 패스워드 암호화\n        const saltValue = await bcrypt.genSalt(10);\n        this.password = await bcrypt.hash(this.password, saltValue);\n\n        // 프로필 사진 자동생성\n        this.profileImg = await gravatar.url(this.email, {\n          s: '200',\n          r: 'pg',\n          d: 'mm',\n          protocol: 'https',\n        });\n      }\n    } catch (e) {\n      console.log(e);\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/UserController.html":{"url":"controllers/UserController.html","title":"controller - UserController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  UserController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/user/user.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                user\n            \n\n\n\n\n\n\n\n    \n\n\n    \n        import { Controller } from '@nestjs/common';\nimport { UserService } from '@user/user.service';\n\n@Controller('user')\nexport class UserController {\n  constructor(private readonly userService: UserService) {}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/UserModule.html":{"url":"modules/UserModule.html","title":"module - UserModule","body":"\n                   \n\n\n\n\n    Modules\n    UserModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_UserModule\n\n\n\ncluster_UserModule_exports\n\n\n\ncluster_UserModule_providers\n\n\n\n\nUserService \n\nUserService \n\n\n\nUserModule\n\nUserModule\n\nUserService  -->\n\nUserModule->UserService \n\n\n\n\n\nUserService\n\nUserService\n\nUserModule -->\n\nUserService->UserModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/user/user.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            UserService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            UserController\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            UserService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport { UserController } from '@user/user.controller';\nimport { UserService } from '@user/user.service';\nimport { User } from '@user/entities/user.entity';\n\n@Module({\n  imports: [TypeOrmModule.forFeature([User])],\n  controllers: [UserController],\n  providers: [UserService],\n  exports: [UserService],\n})\nexport class UserModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UserService.html":{"url":"injectables/UserService.html","title":"injectable - UserService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  UserService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/user/user.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                getUserBy\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(repository: Repository)\n                    \n                \n                        \n                            \n                                Defined in src/user/user.service.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        repository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(dto: CreateUserDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/user/user.service.ts:15\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                dto\n                                            \n                                                            CreateUserDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getUserBy\n                        \n                    \n                \n            \n            \n                \n                        \n                    getUserBy(key: \"id\" | \"email\", value: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/user/user.service.ts:24\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                key\n                                            \n                                                        \"id\" | \"email\"\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                value\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, NotFoundException } from '@nestjs/common';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { Repository } from 'typeorm';\nimport { CreateUserDto } from '@user/dto/create-user.dto';\nimport { User } from '@user/entities/user.entity';\n\n@Injectable()\nexport class UserService {\n  constructor(\n    @InjectRepository(User)\n    private repository: Repository,\n  ) {}\n\n  // 회원 등록 로직\n  async create(dto: CreateUserDto) {\n    const user = this.repository.create(dto);\n\n    await this.repository.save(user);\n\n    return user;\n  }\n\n  // email or id로 회원 정보 찾기\n  async getUserBy(key: 'id' | 'email', value: string) {\n    const user = await this.repository.findOneBy({ [key]: value });\n\n    if (user) {\n      return user;\n    }\n\n    throw new NotFoundException(`존재하지 않은 ${key} 입니다.`);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/app.controller.ts\n            \n            controller\n            AppController\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app.service.ts\n            \n            injectable\n            AppService\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/auth/auth.controller.ts\n            \n            controller\n            AuthController\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/auth/auth.service.ts\n            \n            injectable\n            AuthService\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/auth/dto/create-auth.dto.ts\n            \n            class\n            CreateAuthDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/auth/dto/update-auth.dto.ts\n            \n            class\n            UpdateAuthDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/auth/entities/auth.entity.ts\n            \n            class\n            Auth\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/auth/guard/google-auth.guard.ts\n            \n            injectable\n            GoogleAuthGuard\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/auth/guard/kakao-auth.guard.ts\n            \n            injectable\n            KakaoAuthGuard\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/auth/guard/local-auth.guard.ts\n            \n            injectable\n            LocalAuthGuard\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/auth/guard/token.guard.ts\n            \n            injectable\n            TokenGuard\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/auth/interface/requestUser.interface.ts\n            \n            interface\n            RequestUserInterface\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/auth/interface/token.interface.ts\n            \n            interface\n            TokenInterface\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/auth/strategy/google-auth.strategy.ts\n            \n            injectable\n            GoogleAuthStrategy\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/auth/strategy/kakao-auth.strategy.ts\n            \n            injectable\n            KakaoAuthStrategy\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/auth/strategy/local-auth.strategy.ts\n            \n            injectable\n            LocalAuthStrategy\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/auth/strategy/token.strategy.ts\n            \n            injectable\n            TokenStrategy\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/bank/bank.controller.ts\n            \n            controller\n            BankController\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/bank/bank.service.ts\n            \n            injectable\n            BankService\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/bank/dto/create-bank.dto.ts\n            \n            class\n            CreateBankDto\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/bank/dto/update-bank.dto.ts\n            \n            class\n            UpdateBankDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/bank/entities/bank.entity.ts\n            \n            entity\n            Bank\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/bank/entities/base.entity.ts\n            \n            class\n            BaseEntity\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/mail/mail.service.ts\n            \n            injectable\n            MailService\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                        src/main.ts\n            \n            function\n            bootstrap\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/user/dto/create-user.dto.ts\n            \n            class\n            CreateUserDto\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/user/dto/login-user.dto.ts\n            \n            class\n            LoginUserDto\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/user/dto/update-user.dto.ts\n            \n            class\n            UpdateUserDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/user/entities/user.entity.ts\n            \n            entity\n            User\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/user/user.controller.ts\n            \n            controller\n            UserController\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/user/user.service.ts\n            \n            injectable\n            UserService\n            \n                0 %\n                (0/4)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @compodoc/compodoc : ^1.1.26\n        \n            @hapi/joi : ^17.1.1\n        \n            @nestjs/common : ^10.0.0\n        \n            @nestjs/config : ^3.2.3\n        \n            @nestjs/core : ^10.0.0\n        \n            @nestjs/jwt : ^10.2.0\n        \n            @nestjs/mapped-types : *\n        \n            @nestjs/passport : ^10.0.3\n        \n            @nestjs/platform-express : ^10.0.0\n        \n            @nestjs/swagger : ^7.4.2\n        \n            @nestjs/typeorm : ^10.0.2\n        \n            @types/bcrypt : ^5.0.2\n        \n            @types/cookie-parser : ^1.4.7\n        \n            @types/gravatar : ^1.8.6\n        \n            @types/hapi__joi : ^17.1.14\n        \n            @types/nodemailer : ^6.4.16\n        \n            @types/passport-google-oauth2 : ^0.1.10\n        \n            @types/passport-jwt : ^4.0.1\n        \n            @types/passport-kakao : ^1.0.3\n        \n            @types/passport-local : ^1.0.38\n        \n            bcrypt : ^5.1.1\n        \n            cache-manager : ^4.1.0\n        \n            cache-manager-redis-store : ^2.0.0\n        \n            class-transformer : ^0.5.1\n        \n            class-validator : ^0.14.1\n        \n            cookie-parser : ^1.4.7\n        \n            gravatar : ^1.8.2\n        \n            mysql2 : ^3.11.3\n        \n            nodemailer : ^6.9.15\n        \n            passport : ^0.7.0\n        \n            passport-google-oauth2 : ^0.2.0\n        \n            passport-jwt : ^4.0.1\n        \n            passport-kakao : ^1.0.1\n        \n            passport-local : ^1.0.0\n        \n            reflect-metadata : ^0.2.0\n        \n            rxjs : ^7.8.1\n        \n            typeorm : ^0.3.20\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/enumerations.html":{"url":"miscellaneous/enumerations.html","title":"miscellaneous-enumerations - enumerations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Enumerations\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            Provider   (src/.../provider.enum.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/user/entities/provider.enum.ts\n    \n        \n            \n                \n                    \n                        \n                        Provider\n                    \n                \n                        \n                            \n                                 LOCAL\n                            \n                        \n                        \n                            \n                                Value : local\n                            \n                        \n                        \n                            \n                                 GOOGLE\n                            \n                        \n                        \n                            \n                                Value : google\n                            \n                        \n                        \n                            \n                                 KAKAO\n                            \n                        \n                        \n                            \n                                Value : kakao\n                            \n                        \n                        \n                            \n                                 NAVER\n                            \n                        \n                        \n                            \n                                Value : naver\n                            \n                        \n            \n        \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            bootstrap   (src/.../main.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        bootstrap\n                        \n                    \n                \n            \n            \n                \nbootstrap()\n                \n            \n\n\n\n\n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\n\n  \n\n\n  A progressive Node.js framework for building efficient and scalable server-side applications.\n    \n\n\n\n\n\n\n\n\n  \n    \n  \n\n  \n\nDescription\nNest framework TypeScript starter repository.\nProject setup\nExample :$ npm installCompile and run the project\nExample :# development\n$ npm run start\n\n# watch mode\n$ npm run start:dev\n\n# production mode\n$ npm run start:prodRun tests\nExample :# unit tests\n$ npm run test\n\n# e2e tests\n$ npm run test:e2e\n\n# test coverage\n$ npm run test:covResources\nCheck out a few resources that may come in handy when working with NestJS:\n\nVisit the NestJS Documentation to learn more about the framework.\nFor questions and support, please visit our Discord channel.\nTo dive deeper and get more hands-on experience, check out our official video courses.\nVisualize your application graph and interact with the NestJS application in real-time using NestJS Devtools.\nNeed help with your project (part-time to full-time)? Check out our official enterprise support.\nTo stay in the loop and get updates, follow us on X and LinkedIn.\nLooking for a job, or have a job to offer? Check out our official Jobs board.\n\nSupport\nNest is an MIT-licensed open source project. It can grow thanks to the sponsors and support by the amazing backers. If you'd like to join them, please read more here.\nStay in touch\n\nAuthor - Kamil Myśliwiec\nWebsite - https://nestjs.com\nTwitter - @nestframework\n\nLicense\nNest is MIT licensed.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AuthModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        BankModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        DataBaseModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        MailModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        RedisModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        UserModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_providers\n\n\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_providers\n\n\n\ncluster_BankModule\n\n\n\ncluster_BankModule_providers\n\n\n\ncluster_MailModule\n\n\n\ncluster_MailModule_exports\n\n\n\ncluster_UserModule\n\n\n\ncluster_UserModule_exports\n\n\n\ncluster_UserModule_providers\n\n\n\n\nAuthModule\n\nAuthModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAuthModule->AppModule\n\n\n\n\n\nBankModule\n\nBankModule\n\nAppModule -->\n\nBankModule->AppModule\n\n\n\n\n\nDataBaseModule\n\nDataBaseModule\n\nAppModule -->\n\nDataBaseModule->AppModule\n\n\n\n\n\nMailModule\n\nMailModule\n\nAuthModule -->\n\nMailModule->AuthModule\n\n\n\nAppModule -->\n\nMailModule->AppModule\n\n\n\n\n\nMailService \n\nMailService \n\nMailService  -->\n\nMailModule->MailService \n\n\n\n\n\nRedisModule\n\nRedisModule\n\nAppModule -->\n\nRedisModule->AppModule\n\n\n\n\n\nUserModule\n\nUserModule\n\nAuthModule -->\n\nUserModule->AuthModule\n\n\n\nAppModule -->\n\nUserModule->AppModule\n\n\n\n\n\nUserService \n\nUserService \n\nUserService  -->\n\nUserModule->UserService \n\n\n\n\n\nAppService\n\nAppService\n\nAppModule -->\n\nAppService->AppModule\n\n\n\n\n\nMailService\n\nMailService\n\nMailModule -->\n\nMailService->MailModule\n\n\n\nAppModule -->\n\nMailService->AppModule\n\n\n\n\n\nAuthService\n\nAuthService\n\nAuthModule -->\n\nAuthService->AuthModule\n\n\n\n\n\nGoogleAuthStrategy\n\nGoogleAuthStrategy\n\nAuthModule -->\n\nGoogleAuthStrategy->AuthModule\n\n\n\n\n\nKakaoAuthStrategy\n\nKakaoAuthStrategy\n\nAuthModule -->\n\nKakaoAuthStrategy->AuthModule\n\n\n\n\n\nLocalAuthStrategy\n\nLocalAuthStrategy\n\nAuthModule -->\n\nLocalAuthStrategy->AuthModule\n\n\n\n\n\nTokenStrategy\n\nTokenStrategy\n\nAuthModule -->\n\nTokenStrategy->AuthModule\n\n\n\n\n\nBankService\n\nBankService\n\nBankModule -->\n\nBankService->BankModule\n\n\n\n\n\nUserService\n\nUserService\n\nUserModule -->\n\nUserService->UserModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        7 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    4 Controllers\n                \n            \n        \n        \n            \n                \n                    \n                    2 Entities\n                \n            \n        \n        \n            \n                \n                    \n                    13 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    9 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    2 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 0.0.1\n        \n            Description : \n        \n            License : UNLICENSED\n        \n            Author : \n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
